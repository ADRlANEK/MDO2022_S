pipeline
{
	agent any
	stages
	{
		stage('Build')
		{
			steps
			{
				sh '''
				echo "Budowanie projektu..."
				docker rm -f RO_Dockerfile_Build
				docker volume prune -f
				docker volume  create --name volume_input
				docker volume  create --name volume_output
				docker volume ls
				docker build . -f ./ITE/GCL06/RO400876/lab05/RO_Dockerfile_Build -t ro_build
                    		docker run --mount type=volume,src="ro_build",dst=/volume_input ro_build:latest bash -c "cd .. &&  cp -r /cytoscape.js /volume_input && cp -r /volume_input /volume_output && ls ./volume_input && ls ./volume_output"  	      
                    		echo "Budowanie zakończone"
				'''
				
			}
		}
		
		stage('Test')
		{
			steps
			{
				sh '''
				echo "Testowanie projektu..."
				
				docker rm -f RO_Dockerfile_Test
				docker build . -f ./ITE/GCL06/RO400876/lab05/RO_Dockerfile_Test -t ro_test


				docker run --name test_container --rm --mount source=ro_test,target=/volume_input ro_test:latest

				
				echo "Testowanie zakończone"
				'''
			}
		}
		
		 stage('Deploy')
        {
            steps
            {
                sh 'docker rm -f nodered_deploy || true'
                sh 'docker run -dit --name nodered_deploy --mount type=volume,src="node_vol_out",dst=/node_app node'
                sh 'docker container exec nodered_deploy sh -c "ls -l"'
                sh 'exit $(docker inspect nodered_deploy --format="{{.State.ExitCode}}")'
            }
        }
	}
}

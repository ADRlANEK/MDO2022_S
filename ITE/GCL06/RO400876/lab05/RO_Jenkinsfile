pipeline
{
 parameters
    {
        string(name: 'VERSION', defaultValue: '1.0.0', description: '')
        booleanParam(name: 'PROMOTE', defaultValue: true, description: '')
    }
	agent any
	stages
	{
		stage('Build')
		{
			steps
			{
				sh '''
				echo "Budowanie projektu..."
				docker rm -f ro_build
				docker volume prune -f
				docker volume  create --name volume_input
				docker volume  create --name volume_output
				docker build . -f ./ITE/GCL06/RO400876/lab05/RO_Dockerfile_Build -t ro_build
                    		docker run --mount type=volume,src="ro_build",dst=/volume_input ro_build:latest bash -c "cd .. &&  cp -r /cytoscape.js /volume_input && cp -r /volume_input /volume_output && ls ./volume_input && ls ./volume_output"  	      
                    		echo "Budowanie zakończone"
				'''
				
			}
		}
		
		stage('Test')
		{
			steps
			{
				sh '''
				echo "Testowanie projektu..."
				
				docker rm -f RO_Dockerfile_Test
				docker build . -f ./ITE/GCL06/RO400876/lab05/RO_Dockerfile_Test -t ro_test
				docker run --name test_container --rm --mount source=ro_test,target=/volume_input ro_test:latest
				
				echo "Testowanie zakończone"
				'''
			}
		}
		
		 stage('Deploy')
        {
            steps
            {
                sh '''
                echo "Wdrażanie projektu..."
                
                docker rm -f deploy_container
                docker run -dit --name deploy_container --mount type=volume,src="volume_output",dst=/ro_project node
                docker container exec deploy_container sh -c "ls -l"
                exit $(docker inspect deploy_container --format="{{.State.ExitCode}}")
                echo "Wdrażanie zakończone"
            	 '''
            }
        }
        
        stage ('Publish')
        {
            when
            {
                expression {return params.PROMOTE}
            }
            steps
            {
                sh 'rm -f /var/jenkins_home/workspace/ro_artifacts7 || true'
                sh 'mkdir /var/jenkins_home/workspace/ro_artifacts7'
                sh 'docker rm -f ro_publish || true'
                sh 'docker run -d --name ro_publish --mount type=volume,src="volume_output",dst=/usr/local/ro_project --mount type=bind,source=/var/jenkins_home/workspace/ro_artifacts7,target=/usr/local/ro_copy node bash -c "chmod -R 777 /usr/local/ro_project && cp -R /usr/local/ro_project/. /usr/local/ro_copy"'
                sh "tar -zcvf cytoscape_${params.VERSION}.tar.xz -C /var/jenkins_home/workspace/ro_artifacts7 ."
                archiveArtifacts artifacts: "cytoscape_${params.VERSION}.tar.xz"
                sh 'docker rm -f ro_build || true'
                sh 'docker rm -f ro_test || true'
                sh 'docker rm -f deploy_container || true'
                sh 'docker rm -f ro_publish || true'
            }
        }
	}
}

pipeline {

	agent any

	stages {
		stage('Clone') {
			steps {
				sh 'docker volume create entry_volume'
				sh 'docker rm help_container || true'
				sh 'docker run -v entry_volume:/data --name help_container node'
				sh 'cd ~/ && ls deltachat || git clone --recurse-submodules https://github.com/deltachat/deltachat-desktop.git'
				sh 'docker cp ~/deltachat help_container:/data'
				sh 'docker rm help_container'
			}
		}
	
	stage('Build') {
			steps {
				dir("./ITE/GCL06/JP300987") {
				    sh 'pwd'
				    sh 'ls'
					sh 'docker build . -t build_image -f build_dockerfile'
					sh 'docker volume create exit_volume'
					sh 'docker run --mount type=volume,src="entry_volume",dst=/deltachat_app --mount type=volume,src="exit_volume",dst=/deltachat_app_build build_image bash -c "cd /deltachat_app/deltachat && npm i -g; cd ..; ls; cp -r deltachat /deltachat_app_build"'
				}
			}
		}

	}
}

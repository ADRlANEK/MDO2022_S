pipeline {
    agent any
    parameters {
        string(name: 'VERSION', defaultValue: '1.0.0', description: '')
    
        booleanParam(name: 'PROMOTE', defaultValue: true, description: '')
    
    }
    stages {
        stage('Clone') {
            steps {
                sh '''
                    docker system prune --all -f
                    docker build -t git:latest . -f ./ITE/GCL06/JP300987/Lab05/clone.dockerfile
                    docker run --name clone --rm --mount source=in,target=/volume_in git:latest
                '''
            }
        }
        stage('Build') {
            steps {
                sh '''
                    docker build -t build:latest . -f ./ITE/GCL06/JP300987/Lab05/build.dockerfile
                    docker run --name build --rm --mount source=in,target=/volume_in --mount source=out,target=/volume_out build:latest
                '''
            }
        }
        stage('Test') {
            steps {
                sh '''
                    docker build -t test:latest . -f ./ITE/GCL06/JP300987/Lab05/test.dockerfile
                    docker run --name test --rm --mount source=in,target=/volume_in test:latest
                '''
            }
        }
        stage('Deploy') {
            steps {
                sh '''
                    rm -rf ./artifacts && mkdir artifacts
                    docker run -d --name copy --mount source=out,target=/volume_out busybox true
                    docker cp copy:/volume_out ./artifacts 
                    docker rm copy"
                    rm -rf ./artifacts/extract && mkdir artifacts/extract
                    cp -f ./artifacts/volume_out/target/DiscordSRV*.jar ./artifacts/extract && rm -f ./artifacts/extract/*sources* && cp -R ./artifacts/extract/. ./artifacts
                    rm -rf ./artifacts/volume_out && rm -rf ./artifacts/extract
                '''
                script {
                    def commandStdout = sh(returnStdout: true, script: 'jar tf ./artifacts/\$(ls ./artifacts) | grep plugin.yml')
                    if(commandStdout.contains('plugin.yml'))
                    {
                        echo 'OK'
                    }
                }
            }
        }
        stage('Publish') {
            steps {
                script {
                    if(params.promote) {
                        sh '''
                            find ./artifacts -type f -name '*' -printf \"mv '%h/%f' '%h/${params.version}_%f'\" | sh
                            ls -a ./artifacts
                        '''
                        archiveArtifacts artifacts: 'artifacts/*.jar'
                    }
                    else {
                        echo "Promote false!"
                    }
                }
            }
        }
    }
}

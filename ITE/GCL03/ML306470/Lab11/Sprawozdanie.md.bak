## Zadania do wykonania
### Instalacja klastra Kubernetes
 * Zaopatrz się w implementację stosu k8s: minikube
 * https://minikube.sigs.k8s.io/docs/start/
 
  W celu zaopatrzenia się w implementację została użyta komenda z powyższej strony ```-LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64```
  
  ![](ScreenShots/gettinImplementation.png?raw=true)
 
 * Przeprowadź instalację, wykaż poziom bezpieczeństwa instalacji
 
  Przeprowadzono instalację za pomocą komendy ```sudo install minikube-linux-amd64 /usr/local/bin/minikube``` i sprawdzono wersje komendą ```minikube version```

  ![](ScreenShots/MiniKubeInstallAndVersion.png?raw=true)
 
 * zaopatrz się w polecenie kubectl
 
  Komendami ```curl -LO "https://dl.k8s.io/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl.sha256"``` i ```echo "$(cat kubectl.sha256)  kubectl" | sha256sum --check``` sprawdzono plik binarny.
  
  
  ![](ScreenShots/CheckChecksum.png?raw=true)
  
 
  Pobrano, zainstalowano kubectl następującymi komendami i sprawdzono wersje ```curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"```, ```sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl``` i ```kubectl version```
  
  ![](ScreenShots/DownloadInstalVertsionKubectl.png?raw=true)
 
 * Uruchom Kubernetes, pokaż działający kontener/worker
  
  Na początku dodano użytkownika do nowej grupy (inaczej pojawia się błąd) dockera komedami ```sudo usermod -aG docker $USER```, ```newgrp docker```
  Następnie uruchomiono kubernetesa, sprawdzono dostęp do klastra i dodano alias kolejno komendami ```minikube start```, ```kubectl get po -A```, ```alias kubectl="minikube kubectl --"```
  
  ![](ScreenShots/AddedDockerStuff.png?raw=true)
  
  ![](ScreenShots/StartKubernetesAndShowItWoring.png?raw=true)
 
 * Zmityguj problemy wynikające z wymagań sprzętowych lub odnieś się do nich (względem dokumentacji)
	
  Komputer musi mieć przynajmniej 2 rdzenie.
 
 * Uruchom Dashboard, otwórz w przeglądarce, przedstaw łączność
 
 Uruchomiono dashboard komendą ```minikube dashboard```
 
 ![](ScreenShots/DashboardKubernetes.png?raw=true)
 
 * Zapoznaj się z koncepcjami funkcji wyprowadzanych przez kubernetesa (pod, deployment itp)
 
### Analiza posiadanego kontenera
 * Zdefiniuj krok "Deploy" swojego projektu jako "Deploy to cloud":
   * Deploy zbudowanej aplikacji powinien się odbywać "na kontener"
   * Przygotuj obraz Docker ze swoją aplikacją
   * Jeżeli wybrana aplikacja nie nadaje się do pracy w kontenerze i nie wyprowadza interfejsu funkcjonalnego przez sieć, wymień projekt na potrzeby tego zadania:
     * Minimum: obraz-gotowiec
	 * Optimum: samodzielnie wybrany program, obraz zbudowany na jego bazie
	 * Plan max: obraz wygenerowany wskutek pracy pipeline'u
   * Wykaż, że wybrana aplikacja pracuje jako kontener
   
   Wybrana aplikacja nie wyprowadza interfejsu funkcjonalnego przez sieć. Dlatego też został użyty obraz-gotowiec:
   https://hub.docker.com/_/postgres
   
### Uruchamianie oprogramowania
 * Uruchom kontener na stosie k8s
 * Kontener uruchomiony w minikubie zostanie automatycznie ubrany w pod.
 * ```minikube kubectl run -- <nazwa-wdrożenia> --image=<obraz-docker> --port=<wyprowadzany port> --labels app=<nazwa-wdrożenia>```
 
 
 Uruchomiono kontener komendą ```minikube kubectl run --image=postgres --port 8080 --labels app=mypostgres --env="POSTGRES_PASSWORD=admin123"```
 
  ![](ScreenShots/StartingMiniKube.png?raw=true)
 
 
 * Przedstaw że pod działa (via Dashboard oraz kubectl)
 
 
  Dashboard:
  ![](ScreenShots/CubeWorkingDashboard.png?raw=true)
 
  Komenda ```kubectl get pods```
  ![](ScreenShots/CubeWorkingKubectl.png?raw=true)
 
 * Wyprowadź port celem dotarcia do eksponowanej funkcjonalności
 * ```kubectl port-forward <nazwa-wdrożenia> <LO_PORT>:<PODMAIN_CNTNR_PORT> ```
 
 Użyta komenda ```kubectl port-forward pg 8383:5432```
 ![](ScreenShots/PortForward.png?raw=true)
 
 * Przedstaw komunikację z eskponowaną funkcjonalnością
 
 Użyta komenda ```psql -h 127.0.0.1 -p 8383 -U postgres -W``` z hasłem ```admin123```
 ![](ScreenShots/PostgresWorkin.png?raw=true)
 
### Przekucie wdrożenia manualnego w plik wdrożenia (wprowadzenie)
 * Zapisanie wdrożenia jako plik YML
 * Dodanie replik
 
 Plik yaml:
 ```
 apiVersion: apps/v1
 kind: Deployment
 metadata:
  name: pg
 spec:
  selector:
    matchLabels:
      app: mypostgres
  replicas: 2 # tells deployment to run 2 pods matching the template
  template:
    metadata:
      labels:
        app: mypostgres
    spec:
      containers:
      - name: pg
        image: postgres
        env:
        - name: POSTGRES_PASSWORD
          value: "admin123"
        ports:
        - containerPort: 5432
 ```
 

 * ```kubectl apply``` na pliku
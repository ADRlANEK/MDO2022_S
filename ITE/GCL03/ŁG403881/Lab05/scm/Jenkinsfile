pipeline {
    agent any

    stages {

        stage('RTV'){
            steps{
                sh 'ls -al'
                sh 'docker volume create in'
                sh 'docker volume create out'
               
                sh 'mkdir -p app'
                dir('app'){
                    
                    git branch: 'main', url: 'https://github.com/Niemans/DevOpsLab05.git'
                    sh 'docker container create --name rtv_agd -v in:/in busybox'
                    sh 'docker cp ./. rtv_agd:/in'
                    sh 'docker rm rtv_agd'

                    sh 'ls .'
                    sh 'ls GithubTestApp'
                    sh 'pwd'
                }

                dir('./ITE/GCL03/ŁG403881/Lab05/dockerfiles/build'){
                    sh 'docker build -t dev_build:latest . -f Dockerfile'
                }

            }
        }
        stage('Build') {
            agent {
                docker {
                    image 'dev_build:latest'
                    args '--mount source=in,target=/in --mount source=out,target=/out -u root:root'
                }
            }
            steps {
                echo 'Starting building'

                sh 'ls -al /in'

                //sh 'docker run --mount type=volume, src='
                //dir('/in'){ ///DevOpsLab03/GithubAppLab03
                    //sh 'dotnet build --output /out'
                    //sh 'ls -l'
                //}
                           
            }
        }
        stage('before testing') {
            steps {
                dir('ITE/GCL03/ŁG403881/Lab05/dockerfiles/test'){
                    sh 'docker build -t dev-test:latest . -f Dockerfile'      
                } 
            }
        }
	    stage('Test') {
            agent{
                docker{
                    image 'dev-test:latest'
                    args '--mount src=in, target=/in -u root:root'
                }
            }
            steps {
                dir('/in/DevOpsLab03/GithubAppLab03')
                sh 'docker test --no-build'  
            }
        }

    }
}

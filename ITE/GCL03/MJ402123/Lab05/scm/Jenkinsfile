pipeline {
    agent any
    options {
	timeout(time: 1, unit: 'HOURS')
    }

    stages {
        stage('build') {
		options{
		timeout(time: 1, unit: 'HOURS')
}
            steps {
		sh 'docker kill kontener || true'
		sleep 2
                sh 'docker build -t build_irssi . -f ITE/GCL03/MJ402123/Lab05/Docker-BLDR'
		sh 'docker run --name kontener -dit --rm build_irssi'
		sh 'rm irssi || true'
		sh 'docker cp kontener:irssi/build/src/fe-text/irssi .'
		sh 'docker kill kontener'
            }
        }
        stage('test') {
            steps {
                sh 'docker build -t test_irssi . -f ITE/GCL03/MJ402123/Lab05/Docker-Testy'
		sh 'docker run test_irssi' 
            }
        }
	stage('deploy') {
		steps{

		sh 'docker run --rm --name deploykontener -dit ubuntu'
		sh 'docker cp irssi deploykontener:.'
		sh 'docker container exec deploykontener sh -c "apt-get update"'
		sh 'docker container exec deploykontener sh -c "DEBIAN_FRONTEND="noninteractive" apt-get install -y libglib2.0"'
		sh "docker container exec deploykontener sh -c 'apt-get install -y libutf8proc-dev'"
		sh "docker container exec deploykontener sh -c './irssi --version'"
		sh "docker container kill deploykontener"
		}
	}
	stage('publish') {
		when{
			expression{
				return params.promote==true;
}
}
		steps {
			sh 'rm -r Irssi_Pliki || true'
			sh 'mkdir Irssi_Pliki'
			sh 'echo "ProszÄ™ zainstaluj przed uruchomieniem libglib2.0 i libutf8proc-dev" > Readme'
			sh 'cp irssi Irssi_Pliki'
			sh 'cp Readme Irssi_Pliki'
			sh "tar -zcf Irssi_${params.version}.tar.gz Irssi_Pliki"
			archiveArtifacts artifacts: "Irssi_${params.version}.tar.gz"
		}
	}
    }
}

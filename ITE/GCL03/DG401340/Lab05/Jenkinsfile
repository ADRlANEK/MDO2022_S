pipeline {
    agent any
    parameters {
        booleanParam(name: "promote",
            defaultValue: false,
            description: "Promote to new version, when successful?")
        string(name: "version",
            defaultValue: "",
            description: "Type in verion number:")
    }
    stages {
        stage("Git") {
            steps {
                //sh "docker system prune --all -f"
                //sh "docker build -t git:latest . -f ./ITE/GCL03/DG401340/Lab05/git_dockerfile/Dockerfile"
                //sh "docker run --name clone --rm --mount source=in,target=/volume_in git:latest"
                echo "git"
            }
        }
        stage("Build") {
            steps {
                echo "build"
                //sh "docker build -t build:latest . -f ./ITE/GCL03/DG401340/Lab05/build_dockerfile/Dockerfile"
                //sh "docker run --name build --rm --mount source=in,target=/volume_in --mount source=out,target=/volume_out build:latest"
            }
        }
        stage("Test") {
            steps {
                echo "tests"
            }
        }
        stage("Deploy") {
            steps {
                sh "rm -rf ./artifacts && mkdir artifacts"
                sh "docker run -d --name copy --mount source=out,target=/volume_out busybox true"
                sh "docker cp copy:/volume_out ./artifacts "
                sh "docker rm copy"
                sh "rm -rf ./artifacts/extract && mkdir artifacts/extract"
                sh "cp -f ./artifacts/volume_out/target/DiscordSRV*.jar ./artifacts/extract && rm -f ./artifacts/extract/*sources* && cp -R ./artifacts/extract/. ./artifacts"
                sh "rm -rf ./artifacts/volume_out && rm -rf ./artifacts/extract"
                sh "pwd"
                sh "docker run -it --name mc --mount type=bind,source=/var/jenkins_home/workspace/DiscordSRV/artifacts,target=/plugins itzg/minecraft-server discord help"
                sh "docker logs --follow mc"
                echo "Deploy"
            }
        }
        stage("Publish") {
            steps {
                script {
                    if(params.promote) {
                        sh "find ./artifacts -type f -name '*' -printf \"mv '%h/%f' '%h/${params.version}_%f'\" | sh"
                        sh "ls -a ./artifacts"
                        archiveArtifacts artifacts: "artifacts/*.jar"
                    }
                    else {
                        echo "Everything was successful, but not promoting to new version!"
                    }
                }
            }
        }
    }
}

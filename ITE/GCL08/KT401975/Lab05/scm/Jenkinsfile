pipeline {
	agent any
	stages {
		stage("Start") {
			steps {
				sh 'docker volume create vol'
          	  	git 'https://github.com/InzynieriaOprogramowaniaAGH/MDO2022_S.git'
				sh 'git checkout origin/KT401975'
				sh 'git config --global user.email kewin@tarnowski.biz ; git config --global user.name kawelos'
				sh 'git pull'
				sh 'cd ITE/GCL08/KT401975/Lab05/dockerfiles/buildfile ; docker build -t builder:latest .'
			}
		}
      	stage('Build') {
			agent {
			    docker {
				image 'builder:latest'
				args '--mount source=vol,target=/vol -u root:root'
			    }
			}
         	 steps {
				  sh 'cd /vol && rm -r dotnet-core-xunit-example && git clone https://github.com/barisates/dotnet-core-xunit-example && cd dotnet-core-xunit-example && dotnet build --output ../../artifacts/'        
             }
		}
   		stage('Test') {
			agent {
			    docker {
				image 'builder:latest'
				args '--mount source=vol,target=/vol -u root:root'
			    }
			}
		    steps {
		 		sh 'cd /vol/dotnet-core-xunit-example && dotnet test'
		 	}
		}
   		stage('Run-time image') {
		    steps {
		 		sh 'cd ITE/GCL08/KT401975/Lab05/dockerfiles/runfile ; docker build -t runner:latest .'    
		 	}
		}
		stage('Deploy') {
			agent{
				docker{
					image 'runner:latest'
					args '--mount source=vol,target=/vol -u root:root'
				}
			}
		    steps {
				sh 'cd /vol/artifacts'
		        sh 'cd /vol/artifacts && ./dotnet-core-xunit-example'
		    }
		}
     }
}
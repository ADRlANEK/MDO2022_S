Started by user Bartosz
Obtained ./ITE/GCL08/BT403177/Lab05/JenkinsFile from git https://github.com/InzynieriaOprogramowaniaAGH/MDO2022_S
[Pipeline] Start of Pipeline
[Pipeline] node
Running on Jenkins in /var/jenkins_home/workspace/Projekt
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Declarative: Checkout SCM)
[Pipeline] checkout
The recommended git tool is: git
No credentials specified
 > git rev-parse --resolve-git-dir /var/jenkins_home/workspace/Projekt/.git # timeout=10
Fetching changes from the remote Git repository
 > git config remote.origin.url https://github.com/InzynieriaOprogramowaniaAGH/MDO2022_S # timeout=10
Fetching upstream changes from https://github.com/InzynieriaOprogramowaniaAGH/MDO2022_S
 > git --version # timeout=10
 > git --version # 'git version 2.30.2'
 > git fetch --tags --force --progress -- https://github.com/InzynieriaOprogramowaniaAGH/MDO2022_S +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git rev-parse refs/remotes/origin/BT403177^{commit} # timeout=10
Checking out Revision dfa45c6672ffc95dfa5142eb3a33c40c43f27ca5 (refs/remotes/origin/BT403177)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f dfa45c6672ffc95dfa5142eb3a33c40c43f27ca5 # timeout=10
Commit message: "BT403177"
 > git rev-list --no-walk dfa45c6672ffc95dfa5142eb3a33c40c43f27ca5 # timeout=10
[Pipeline] }
[Pipeline] // stage
[Pipeline] withEnv
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Clone)
[Pipeline] echo
Cloning apollo-server
[Pipeline] sh
+ docker volume create input-volume
input-volume
[Pipeline] sh
+ docker rm tempContainer
Error: No such container: tempContainer
+ true
[Pipeline] sh
+ docker run --rm --name tempContainer --mount type=volume,src=input-volume,dst=/myapp node bash -c cd ~/; ls apollo-server || git clone https://github.com/apollographql/apollo-server ;ls apollo-server; cp -R apollo-server /myapp; ls /myapp
ls: cannot access 'apollo-server': No such file or directory
Cloning into 'apollo-server'...
CHANGELOG.md
CONTRIBUTING.md
DEVELOPMENT.md
LICENSE
README.md
ROADMAP.md
codecov.yml
codegen.yml
cspell-dict.txt
cspell.yaml
docs
jest.config.base.js
jest.setup.js
lerna.json
netlify.toml
package-lock.json
package.json
packages
renovate.json5
tsconfig.base.json
tsconfig.build.json
tsconfig.json
tsconfig.test.base.json
tsconfig.test.json
types
apollo-server
cropperjs
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Build)
[Pipeline] echo
Buildig apollo-server with npm
[Pipeline] dir
Running in /var/jenkins_home/workspace/Projekt/ITE/GCL08/BT403177/Lab05
[Pipeline] {
[Pipeline] sh
+ docker build . -t apollo-server -f Dockerfile
Sending build context to Docker daemon  10.24kB

Step 1/3 : FROM node:alpine
 ---> c4f3fb5f722f
Step 2/3 : WORKDIR apollo-server
 ---> Using cache
 ---> ce4e05265903
Step 3/3 : RUN apk update && apk add bash && apk add git
 ---> Using cache
 ---> bf3a0899a116
Successfully built bf3a0899a116
Successfully tagged apollo-server:latest
[Pipeline] sh
+ docker volume create output-volume
output-volume
[Pipeline] sh
+ docker rm apollo-server-build
Error: No such container: apollo-server-build
+ true
[Pipeline] sh
+ docker run --rm --name apollo-server-build --mount type=volume,src=input-volume,dst=/myapp --mount type=volume,src=output-volume,dst=/myapp_build apollo-server bash -c cd /myapp/apollo-server && npm install; cp -R /myapp/apollo-server /myapp_build

> postinstall
> lerna run prepare && npm run compile

lerna notice cli v4.0.0
lerna info versioning independent
lerna info Executing command in 1 package: "npm run prepare"
lerna info run Ran npm script 'prepare' in 'apollo-server-env' in 9.2s:

> apollo-server-env@4.2.1 prepare
> npm run clean && npm run compile


> apollo-server-env@4.2.1 clean
> git clean -fdX -- dist

Removing dist/

> apollo-server-env@4.2.1 compile
> tsc && cp src/*.d.ts dist

lerna success run Ran npm script 'prepare' in 1 package in 9.2s:
lerna success - apollo-server-env

> compile
> tsc --build tsconfig.build.json


up to date, audited 1994 packages in 41s

104 packages are looking for funding
  run `npm fund` for details

16 vulnerabilities (4 moderate, 9 high, 3 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues (including breaking changes), run:
  npm audit fix --force

Run `npm audit` for details.
npm notice 
npm notice New minor version of npm available! 8.11.0 -> 8.12.1
npm notice Changelog: <https://github.com/npm/cli/releases/tag/v8.12.1>
npm notice Run `npm install -g npm@8.12.1` to update!
npm notice 
[Pipeline] }
[Pipeline] // dir
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Test)
[Pipeline] echo
Testing apollo-server with npm
[Pipeline] dir
Running in /var/jenkins_home/workspace/Projekt/ITE/GCL08/BT403177/Lab05
[Pipeline] {
[Pipeline] sh
+ docker rm apollo-server-test
Error: No such container: apollo-server-test
+ true
[Pipeline] sh
+ docker run --rm --name apollo-server-test --mount type=volume,src=input-volume,dst=/myapp_test apollo-server bash -c cd /myapp_test/apollo-server && npm test || true

> pretest
> tsc --build tsconfig.json


> test
> jest --verbose

ts-jest[ts-compiler] (WARN) [96mpackages/apollo-datasource-rest/src/HTTPCache.ts[0m:[93m3[0m:[93m30[0m - [91merror[0m[90m TS7016: [0mCould not find a declaration file for module 'http-cache-semantics'. '/myapp_test/apollo-server/node_modules/http-cache-semantics/index.js' implicitly has an 'any' type.
  Try `npm i --save-dev @types/http-cache-semantics` if it exists or add a new declaration (.d.ts) file containing `declare module 'http-cache-semantics';`

[7m3[0m import CachePolicy = require('http-cache-semantics');
[7m [0m [91m                             ~~~~~~~~~~~~~~~~~~~~~~[0m
PASS packages/apollo-datasource-rest/src/__tests__/RESTDataSource.test.ts (14.08 s)
  RESTDataSource
    constructing requests
      ✓ interprets paths relative to the base URL (30 ms)
      ✓ interprets paths with a leading slash relative to the base URL (10 ms)
      ✓ adds a trailing slash to the base URL if needed (6 ms)
      ✓ allows resolving a base URL asynchronously (4 ms)
      ✓ allows passing in query string parameters (9 ms)
      ✓ allows setting default query string parameters (2 ms)
      ✓ allows setting default fetch options (2 ms)
      ✓ allows setting request headers (8 ms)
      ✓ serializes a request body that is an object as JSON (16 ms)
      ✓ serializes a request body that is an array as JSON (14 ms)
      ✓ serializes a request body that has a toJSON method as JSON (2 ms)
      ✓ does not serialize a request body that is not an object (3 ms)
      ✓ allows performing GET requests (4 ms)
      ✓ allows performing POST requests (9 ms)
      ✓ allows performing PATCH requests (4 ms)
      ✓ allows performing PUT requests (10 ms)
      ✓ allows performing DELETE requests (1 ms)
    response parsing
      ✓ returns data as parsed JSON when Content-Type is application/json (1 ms)
      ✓ returns data as parsed JSON when Content-Type is application/hal+json (13 ms)
      ✓ returns data as parsed JSON when Content-Type ends in +json (4 ms)
      ✓ returns data as a string when Content-Type is text/plain (3 ms)
      ✓ attempts to return data as a string when no Content-Type header is returned (3 ms)
      ✓ returns data as a string when response status code is 204 no content (1 ms)
      ✓ returns empty object when response content length is 0 (1 ms)
    memoization
      ✓ deduplicates requests with the same cache key (2 ms)
      ✓ does not deduplicate requests with a different cache key (3 ms)
      ✓ does not deduplicate non-GET requests (9 ms)
      ✓ non-GET request removes memoized request with the same cache key (7 ms)
      ✓ allows specifying a custom cache key (3 ms)
    error handling
      ✓ throws an AuthenticationError when the response status is 401 (125 ms)
      ✓ throws a ForbiddenError when the response status is 403 (3 ms)
      ✓ throws an ApolloError when the response status is 500 (5 ms)
      ✓ puts JSON error responses on the error as an object (3 ms)
    trace
      ✓ is called once per request (18 ms)

PASS packages/apollo-server-core/src/__tests__/runQuery.test.ts (20.853 s)
  runQuery
    ✓ returns the right result when query is a string (52 ms)
    ✓ returns a syntax error if the query string contains one (41 ms)
    ✓ does not call console.error if in an error occurs and debug mode is set (294 ms)
    ✓ does not call console.error if in an error occurs and not in debug mode (7 ms)
    ✓ returns a validation error if the query string does not pass validation (26 ms)
    ✓ correctly passes in the rootValue (4 ms)
    ✓ correctly evaluates a rootValue function (8 ms)
    ✓ correctly passes in the context (4 ms)
    ✓ passes the options to formatResponse (3 ms)
    ✓ correctly passes in variables (and arguments) (4 ms)
    ✓ throws an error if there are missing variables (21 ms)
    ✓ supports yielding resolver functions (3 ms)
    ✓ runs the correct operation when operationName is specified (2 ms)
    ✓ uses custom field resolver (7 ms)
    request pipeline life-cycle hooks
      requestDidStart
        ✓ called for each request (6 ms)
        ✓ is called with the schema and schemaHash (3 ms)
      didResolveSource
        ✓ called with the source (3 ms)
      parsingDidStart
        ✓ called when parsing will result in an error (2 ms)
        ✓ called when a successful parse happens (13 ms)
      executionDidStart
        ✓ called when execution starts (26 ms)
        executionDidEnd
          ✓ works as a listener on an object returned from "executionDidStart" (3 ms)
        willResolveField
          ✓ called when resolving a field starts (9 ms)
          ✓ called once for each field being resolved (5 ms)
          ✓ calls the end handler (14 ms)
          ✓ calls the end handler for each field being resolved (3 ms)
          ✓ uses the custom "fieldResolver" when defined (29 ms)
          receives correct resolver parameter object
            ✓ receives undefined parent when there is no parent (5 ms)
            ✓ receives the parent when there is one (10 ms)
            ✓ receives context (7 ms)
            ✓ receives arguments (7 ms)
      didEncounterErrors
        ✓ called when an error occurs (4 ms)
        ✓ called when an error occurs in execution (38 ms)
        ✓ not called when an error does not occur (2 ms)
      ordering
        ✓ calls hooks in the expected order (10 ms)
    parsing and validation cache
      ✓ validates each time when the documentStore is not present (5 ms)
      ✓ caches the DocumentNode in the documentStore when instrumented (16 ms)
      ✓ the documentStore calculates the DocumentNode's length by its JSON.stringify'd representation (64 ms)
    async_hooks
      ✓ does not break async_hook call stack (4 ms)

PASS packages/apollo-server-core/src/plugin/usageReporting/__tests__/stats.test.ts (9.543 s)
  Check query latency stats when
    ✓ adding a single trace (17 ms)
    ✓ adding a fully cached trace (23 ms)
    ✓ adding a public cached trace (4 ms)
    ✓ adding a private cached trace (5 ms)
    ✓ adding a persisted hit trace (5 ms)
    ✓ adding a persisted miss trace (4 ms)
    ✓ adding a forbidden trace (3 ms)
    ✓ adding a registered trace (3 ms)
    ✓ adding an errored trace  (13 ms)
    ✓ merging errored traces (6 ms)
    ✓ merging non-errored traces (7 ms)
  Check type stats
    ✓ add single non-federated trace (6 ms)
    ✓ add multiple non-federated trace (18 ms)
    ✓ add multiple federated trace (5 ms)
    ✓ add multiple errored traces trace (5 ms)

PASS packages/apollo-server-core/src/plugin/usageReporting/__tests__/plugin.test.ts (24.01 s)
  end-to-end
    ✓ basic tracing (177 ms)
    ✓ fails parse for non-parsable gql (98 ms)
    ✓ validation fails for invalid operation (57 ms)
    ✓ unknown operation error if not specified (40 ms)
    ✓ handles anonymous operation (79 ms)
    ✓ handles named operation (55 ms)
    includeRequest
      ✓ include based on operation name (60 ms)
      ✓ exclude based on operation name (79 ms)
    fieldLevelInstrumentation
      ✓ include based on operation name (35 ms)
      ✓ exclude based on operation name (64 ms)
      passing a number
        ✓ RNG returns a small number (42 ms)
        ✓ RNG returns a large number (49 ms)
  sendHeaders makeHTTPRequestHeaders helper
    ✓ sendHeaders defaults to hiding all (2 ms)
    ✓ sendHeaders.all and sendHeaders.none (1 ms)
    ✓ invalid inputs for sendHeaders.all and sendHeaders.none (1 ms)
    ✓ test sendHeaders.exceptNames (1 ms)
    ✓ test sendHeaders.onlyNames (1 ms)
    ✓ authorization, cookie, and set-cookie headers should never be sent (1 ms)

FAIL packages/apollo-server-koa/src/__tests__/ApolloServer.test.ts (15.836 s)
  apollo-server-koa
    ApolloServer
      constructor
        validation rules
          ✓ accepts additional rules (714 ms)
          ✓ allows introspection by default (54 ms)
          ✓ prevents introspection by default during production (77 ms)
          ✓ allows introspection to be enabled explicitly (127 ms)
          ✓ prohibits providing a gateway in addition to schema/typeDefs/resolvers (11 ms)
        appropriate error for bad user input
          ✓ variable coercion errors (82 ms)
          ✓ catches required type variable error and returns UserInputError (50 ms)
          ✓ catches required List type variable error and returns UserInputError (88 ms)
          ✓ catches non-null type variable error and returns UserInputError (72 ms)
          ✓ catches non-null List type variable error and returns UserInputError (109 ms)
          ✓ catches List of non-null type variable error and returns UserInputError (45 ms)
        schema creation
          ✓ accepts typeDefs and resolvers (28 ms)
          ✓ accepts a gateway's schema and calls its executor (23 ms)
          ✓ rejected load promise is thrown by server.start (4 ms)
          ✓ not calling start causes a clear error (23 ms)
          ✓ uses schema over resolvers + typeDefs (26 ms)
          ✓ allows mocks as boolean (29 ms)
          ✓ allows mocks as an object (39 ms)
          ✓ allows mocks as an object without overriding the existing resolvers (87 ms)
      Plugins
        ✓ works when using executeOperation (25 ms)
        ✓ returns correct status code for a normal operation (27 ms)
        ✓ allows setting a custom status code for an error (40 ms)
        ✓ preserves user-added "extensions" in the response when parsing errors occur (49 ms)
        ✓ preserves user-added "extensions" in the response when validation errors occur (39 ms)
      formatError
        ✓ wraps thrown error from validation rules (107 ms)
        ✓ works with errors similar to GraphQL errors, such as yup (65 ms)
      lifecycle
        ✓ errors thrown in plugins call formatError and are wrapped (57 ms)
        ✓ propagates error codes in production (37 ms)
        ✓ propagates error codes with null response in production (62 ms)
        ✓ shows ApolloError extensions in extensions (only!) (56 ms)
        for Apollo usage reporting
          traces
            ✕ cachePolicy (23 ms)
            ✕ does not expose stack (8 ms)
            ✕ sets the trace key to operationName when it is defined (2 ms)
            ✕ sets the trace key to unknown operation for missing operation (5 ms)
            ✕ sets the trace key to parse failure when non-parsable gql (3 ms)
            ✕ sets the trace key to validation failure when invalid operation (2 ms)
            ✕ sets the trace key to "-" when operationName is undefined (3 ms)
            ✕ doesn't resort to query body signature on `didResolveOperation` error (2 ms)
            ✕ doesn't internal server error on an APQ (6 ms)
            error munging
              ✕ undefined error (3 ms)
              rewriteError
                ✕ new error (8 ms)
                ✕ modified error (22 ms)
                ✕ nulled error (14 ms)
        context field
          ✓ defers context eval with thunk until after options creation (83 ms)
          context cloning
            ✓ clones the context for request pipeline requests (35 ms)
            ✓ for every request with executeOperation (77 ms)
          as a function
            ✓ can accept and return `req` (48 ms)
            ✓ can accept nothing and return an empty object (21 ms)
            ✓ can be an async function (18 ms)
            ✓ returns thrown context error as a valid graphql result (43 ms)
          as an object
            ✓ can be an empty object (17 ms)
            ✓ can contain arbitrary values (13 ms)
      Persisted Queries
        ✓ returns PersistedQueryNotFound on the first try (38 ms)
        ✓ returns result on the second try (41 ms)
        ✓ returns result on the persisted query (33 ms)
        ✓ returns error when hash does not match (36 ms)
        ✓ returns correct result for persisted query link (63 ms)
        ✓ returns correct result for persisted query link using get request (34 ms)
      usage reporting
        graphql server functions even when Apollo servers are down
          ✕ with retryable error (1 ms)
          ✕ with network error (1 ms)
          ✕ with non-retryable error (1 ms)
      Federated tracing
        ✓ doesn't include federated trace without the special header (49 ms)
        ✓ doesn't include federated trace without _Service in the schema (48 ms)
        ✓ reports a total duration that is longer than the duration of its resolvers (75 ms)
        ✓ includes errors in federated trace (61 ms)
      Response caching
        ✓ basic caching (365 ms)
      Gateway
        ✓ receives schema updates from the gateway (with document store: true) (78 ms)
        ✓ receives schema updates from the gateway (with document store: false) (59 ms)
        ✓ passes apollo data to the gateway (226 ms)
        ✓ unsubscribes from schema update on close (16 ms)
        ✓ waits until gateway has resolved a schema to respond to queries (61 ms)
        ✓ can serve multiple active schemas simultaneously during a schema rollover (145 ms)
      renderLandingPage
        ✓ defaults to LocalDefault (53 ms)
        ✓ can specify version for LocalDefault (42 ms)
        ✓ can install playground with specific version (170 ms)
        ✓ can be disabled (30 ms)
        basic functionality
          with non-root graphqlPath
            ✓ basic GET works (27 ms)
            ✓ only mounts under graphqlPath (20 ms)
            ✓ needs the header (29 ms)
            ✓ trailing slash works (22 ms)
          with root graphqlPath
            ✓ basic GET works (28 ms)
            ✓ needs the header (23 ms)
        startup errors
          ✓ only one plugin can implement renderLandingPage (23 ms)
      CSRF prevention
        ✓ csrfPrevention: true (135 ms)
        ✓ csrfPrevention: {requestHeaders} (56 ms)
    constructor
      ✓ accepts typeDefs and resolvers (15 ms)
    applyMiddleware
      ✓ can be queried (38 ms)
      ✓ renders landing page by default when browser requests (26 ms)
      ✓ accepts cors configuration (26 ms)
      ✓ accepts body parser configuration (21 ms)
      health checks
        ✓ creates a health check endpoint (26 ms)
        ✓ provides a callback for the health check (38 ms)
        ✓ can disable the healthCheck (31 ms)
      errors
        ✓ returns thrown context error as a valid graphql result (33 ms)
        ✓ propagates error codes in dev mode (36 ms)
        ✓ propagates error codes in production (35 ms)
        ✓ propagates error codes with null response in production (50 ms)
    extensions
      Cache Control Headers
        ✓ applies cacheControl Headers (39 ms)
        ✓ contains no cacheControl Headers when uncacheable (38 ms)
        ✓ contains private cacheControl Headers when scoped (31 ms)
        ✓ runs when cache-control is false (33 ms)

  ● apollo-server-koa › ApolloServer › lifecycle › for Apollo usage reporting › traces › cachePolicy

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1063:19)

  ● apollo-server-koa › ApolloServer › lifecycle › for Apollo usage reporting › traces › does not expose stack

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1090:19)

  ● apollo-server-koa › ApolloServer › lifecycle › for Apollo usage reporting › traces › sets the trace key to operationName when it is defined

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1123:19)

  ● apollo-server-koa › ApolloServer › lifecycle › for Apollo usage reporting › traces › sets the trace key to unknown operation for missing operation

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1142:19)

  ● apollo-server-koa › ApolloServer › lifecycle › for Apollo usage reporting › traces › sets the trace key to parse failure when non-parsable gql

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1158:19)

  ● apollo-server-koa › ApolloServer › lifecycle › for Apollo usage reporting › traces › sets the trace key to validation failure when invalid operation

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1173:19)

  ● apollo-server-koa › ApolloServer › lifecycle › for Apollo usage reporting › traces › sets the trace key to "-" when operationName is undefined

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1188:19)

  ● apollo-server-koa › ApolloServer › lifecycle › for Apollo usage reporting › traces › doesn't resort to query body signature on `didResolveOperation` error

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1205:19)

  ● apollo-server-koa › ApolloServer › lifecycle › for Apollo usage reporting › traces › doesn't internal server error on an APQ

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1234:19)

  ● apollo-server-koa › ApolloServer › lifecycle › for Apollo usage reporting › traces › error munging › rewriteError › new error

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1278:23)

  ● apollo-server-koa › ApolloServer › lifecycle › for Apollo usage reporting › traces › error munging › rewriteError › modified error

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1321:23)

  ● apollo-server-koa › ApolloServer › lifecycle › for Apollo usage reporting › traces › error munging › rewriteError › nulled error

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1366:23)

  ● apollo-server-koa › ApolloServer › lifecycle › for Apollo usage reporting › traces › error munging › undefined error

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1403:21)

  ● apollo-server-koa › ApolloServer › usage reporting › graphql server functions even when Apollo servers are down › with retryable error

    The family was unexpectedly 4.

      1959 |           fakeUsageReportingServer.address() as AddressInfo;
      1960 |         if (family !== 'IPv4') {
    > 1961 |           throw new Error(`The family was unexpectedly ${family}.`);
           |                 ^
      1962 |         }
      1963 |
      1964 |         const fakeUsageReportingUrl = `http://${address}:${port}`;

      at makeFakeUsageReportingServer (../apollo-server-integration-testsuite/src/ApolloServer.ts:1961:17)
      at testWithStatus (../apollo-server-integration-testsuite/src/ApolloServer.ts:1985:13)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:2072:11)

  ● apollo-server-koa › ApolloServer › usage reporting › graphql server functions even when Apollo servers are down › with network error

    The family was unexpectedly 4.

      1959 |           fakeUsageReportingServer.address() as AddressInfo;
      1960 |         if (family !== 'IPv4') {
    > 1961 |           throw new Error(`The family was unexpectedly ${family}.`);
           |                 ^
      1962 |         }
      1963 |
      1964 |         const fakeUsageReportingUrl = `http://${address}:${port}`;

      at makeFakeUsageReportingServer (../apollo-server-integration-testsuite/src/ApolloServer.ts:1961:17)
      at testWithStatus (../apollo-server-integration-testsuite/src/ApolloServer.ts:1985:13)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:2075:11)

  ● apollo-server-koa › ApolloServer › usage reporting › graphql server functions even when Apollo servers are down › with non-retryable error

    The family was unexpectedly 4.

      1959 |           fakeUsageReportingServer.address() as AddressInfo;
      1960 |         if (family !== 'IPv4') {
    > 1961 |           throw new Error(`The family was unexpectedly ${family}.`);
           |                 ^
      1962 |         }
      1963 |
      1964 |         const fakeUsageReportingUrl = `http://${address}:${port}`;

      at makeFakeUsageReportingServer (../apollo-server-integration-testsuite/src/ApolloServer.ts:1961:17)
      at testWithStatus (../apollo-server-integration-testsuite/src/ApolloServer.ts:1985:13)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:2078:11)

FAIL packages/apollo-server-express/src/__tests__/ApolloServer.test.ts (17.537 s)
  apollo-server-express
    ApolloServer
      constructor
        validation rules
          ✓ accepts additional rules (498 ms)
          ✓ allows introspection by default (73 ms)
          ✓ prevents introspection by default during production (71 ms)
          ✓ allows introspection to be enabled explicitly (84 ms)
          ✓ prohibits providing a gateway in addition to schema/typeDefs/resolvers (15 ms)
        appropriate error for bad user input
          ✓ variable coercion errors (190 ms)
          ✓ catches required type variable error and returns UserInputError (87 ms)
          ✓ catches required List type variable error and returns UserInputError (102 ms)
          ✓ catches non-null type variable error and returns UserInputError (61 ms)
          ✓ catches non-null List type variable error and returns UserInputError (74 ms)
          ✓ catches List of non-null type variable error and returns UserInputError (87 ms)
        schema creation
          ✓ accepts typeDefs and resolvers (43 ms)
          ✓ accepts a gateway's schema and calls its executor (25 ms)
          ✓ rejected load promise is thrown by server.start (6 ms)
          ✓ not calling start causes a clear error (45 ms)
          ✓ uses schema over resolvers + typeDefs (85 ms)
          ✓ allows mocks as boolean (49 ms)
          ✓ allows mocks as an object (57 ms)
          ✓ allows mocks as an object without overriding the existing resolvers (120 ms)
      Plugins
        ✓ works when using executeOperation (25 ms)
        ✓ returns correct status code for a normal operation (44 ms)
        ✓ allows setting a custom status code for an error (31 ms)
        ✓ preserves user-added "extensions" in the response when parsing errors occur (39 ms)
        ✓ preserves user-added "extensions" in the response when validation errors occur (26 ms)
      formatError
        ✓ wraps thrown error from validation rules (47 ms)
        ✓ works with errors similar to GraphQL errors, such as yup (64 ms)
      lifecycle
        ✓ errors thrown in plugins call formatError and are wrapped (84 ms)
        ✓ propagates error codes in production (48 ms)
        ✓ propagates error codes with null response in production (49 ms)
        ✓ shows ApolloError extensions in extensions (only!) (38 ms)
        for Apollo usage reporting
          traces
            ✕ cachePolicy (13 ms)
            ✕ does not expose stack (4 ms)
            ✕ sets the trace key to operationName when it is defined (2 ms)
            ✕ sets the trace key to unknown operation for missing operation (3 ms)
            ✕ sets the trace key to parse failure when non-parsable gql (3 ms)
            ✕ sets the trace key to validation failure when invalid operation (2 ms)
            ✕ sets the trace key to "-" when operationName is undefined (2 ms)
            ✕ doesn't resort to query body signature on `didResolveOperation` error (2 ms)
            ✕ doesn't internal server error on an APQ (10 ms)
            error munging
              ✕ undefined error (2 ms)
              rewriteError
                ✕ new error (6 ms)
                ✕ modified error (9 ms)
                ✕ nulled error (9 ms)
        context field
          ✓ defers context eval with thunk until after options creation (137 ms)
          context cloning
            ✓ clones the context for request pipeline requests (34 ms)
            ✓ for every request with executeOperation (30 ms)
          as a function
            ✓ can accept and return `req` (46 ms)
            ✓ can accept nothing and return an empty object (30 ms)
            ✓ can be an async function (29 ms)
            ✓ returns thrown context error as a valid graphql result (26 ms)
          as an object
            ✓ can be an empty object (40 ms)
            ✓ can contain arbitrary values (23 ms)
      Persisted Queries
        ✓ returns PersistedQueryNotFound on the first try (25 ms)
        ✓ returns result on the second try (45 ms)
        ✓ returns result on the persisted query (80 ms)
        ✓ returns error when hash does not match (31 ms)
        ✓ returns correct result for persisted query link (77 ms)
        ✓ returns correct result for persisted query link using get request (37 ms)
      usage reporting
        graphql server functions even when Apollo servers are down
          ✕ with retryable error (2 ms)
          ✕ with network error (2 ms)
          ✕ with non-retryable error (1 ms)
      Federated tracing
        ✓ doesn't include federated trace without the special header (48 ms)
        ✓ doesn't include federated trace without _Service in the schema (42 ms)
        ✓ reports a total duration that is longer than the duration of its resolvers (70 ms)
        ✓ includes errors in federated trace (77 ms)
      Response caching
        ✓ basic caching (381 ms)
      Gateway
        ✓ receives schema updates from the gateway (with document store: true) (87 ms)
        ✓ receives schema updates from the gateway (with document store: false) (103 ms)
        ✓ passes apollo data to the gateway (254 ms)
        ✓ unsubscribes from schema update on close (20 ms)
        ✓ waits until gateway has resolved a schema to respond to queries (49 ms)
        ✓ can serve multiple active schemas simultaneously during a schema rollover (117 ms)
      renderLandingPage
        ✓ defaults to LocalDefault (67 ms)
        ✓ can specify version for LocalDefault (31 ms)
        ✓ can install playground with specific version (138 ms)
        ✓ can be disabled (35 ms)
        basic functionality
          with non-root graphqlPath
            ✓ basic GET works (45 ms)
            ✓ only mounts under graphqlPath (52 ms)
            ✓ needs the header (35 ms)
            ✓ trailing slash works (22 ms)
          with root graphqlPath
            ✓ basic GET works (26 ms)
            ✓ needs the header (24 ms)
        startup errors
          ✓ only one plugin can implement renderLandingPage (17 ms)
      CSRF prevention
        ✓ csrfPrevention: true (177 ms)
        ✓ csrfPrevention: {requestHeaders} (80 ms)
    constructor
      ✓ accepts typeDefs and resolvers (29 ms)
    applyMiddleware
      ✓ can be queried (17 ms)
      ✓ renders landing page by default when browser requests (16 ms)
      ✓ accepts cors configuration (18 ms)
      ✓ accepts body parser configuration (34 ms)
      ✓ gives helpful error if body is not parsed (24 ms)
      health checks
        ✓ creates a health check endpoint (55 ms)
        ✓ provides a callback for the health check (27 ms)
        ✓ can disable the healthCheck (14 ms)
      errors
        ✓ returns thrown context error as a valid graphql result (34 ms)
        ✓ propagates error codes in dev mode (39 ms)
        ✓ propagates error codes in production (30 ms)
        ✓ propagates error codes with null response in production (46 ms)
    extensions
      Cache Control Headers
        ✓ applies cacheControl Headers (39 ms)
        ✓ contains no cacheControl Headers when uncacheable (49 ms)
        ✓ contains private cacheControl Headers when scoped (35 ms)
        ✓ runs when cache-control is disabled (69 ms)

  ● apollo-server-express › ApolloServer › lifecycle › for Apollo usage reporting › traces › cachePolicy

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1063:19)

  ● apollo-server-express › ApolloServer › lifecycle › for Apollo usage reporting › traces › does not expose stack

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1090:19)

  ● apollo-server-express › ApolloServer › lifecycle › for Apollo usage reporting › traces › sets the trace key to operationName when it is defined

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1123:19)

  ● apollo-server-express › ApolloServer › lifecycle › for Apollo usage reporting › traces › sets the trace key to unknown operation for missing operation

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1142:19)

  ● apollo-server-express › ApolloServer › lifecycle › for Apollo usage reporting › traces › sets the trace key to parse failure when non-parsable gql

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1158:19)

  ● apollo-server-express › ApolloServer › lifecycle › for Apollo usage reporting › traces › sets the trace key to validation failure when invalid operation

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1173:19)

  ● apollo-server-express › ApolloServer › lifecycle › for Apollo usage reporting › traces › sets the trace key to "-" when operationName is undefined

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1188:19)

  ● apollo-server-express › ApolloServer › lifecycle › for Apollo usage reporting › traces › doesn't resort to query body signature on `didResolveOperation` error

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1205:19)

  ● apollo-server-express › ApolloServer › lifecycle › for Apollo usage reporting › traces › doesn't internal server error on an APQ

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1234:19)

  ● apollo-server-express › ApolloServer › lifecycle › for Apollo usage reporting › traces › error munging › rewriteError › new error

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1278:23)

  ● apollo-server-express › ApolloServer › lifecycle › for Apollo usage reporting › traces › error munging › rewriteError › modified error

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1321:23)

  ● apollo-server-express › ApolloServer › lifecycle › for Apollo usage reporting › traces › error munging › rewriteError › nulled error

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1366:23)

  ● apollo-server-express › ApolloServer › lifecycle › for Apollo usage reporting › traces › error munging › undefined error

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1403:21)

  ● apollo-server-express › ApolloServer › usage reporting › graphql server functions even when Apollo servers are down › with retryable error

    The family was unexpectedly 4.

      1959 |           fakeUsageReportingServer.address() as AddressInfo;
      1960 |         if (family !== 'IPv4') {
    > 1961 |           throw new Error(`The family was unexpectedly ${family}.`);
           |                 ^
      1962 |         }
      1963 |
      1964 |         const fakeUsageReportingUrl = `http://${address}:${port}`;

      at makeFakeUsageReportingServer (../apollo-server-integration-testsuite/src/ApolloServer.ts:1961:17)
      at testWithStatus (../apollo-server-integration-testsuite/src/ApolloServer.ts:1985:13)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:2072:11)

  ● apollo-server-express › ApolloServer › usage reporting › graphql server functions even when Apollo servers are down › with network error

    The family was unexpectedly 4.

      1959 |           fakeUsageReportingServer.address() as AddressInfo;
      1960 |         if (family !== 'IPv4') {
    > 1961 |           throw new Error(`The family was unexpectedly ${family}.`);
           |                 ^
      1962 |         }
      1963 |
      1964 |         const fakeUsageReportingUrl = `http://${address}:${port}`;

      at makeFakeUsageReportingServer (../apollo-server-integration-testsuite/src/ApolloServer.ts:1961:17)
      at testWithStatus (../apollo-server-integration-testsuite/src/ApolloServer.ts:1985:13)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:2075:11)

  ● apollo-server-express › ApolloServer › usage reporting › graphql server functions even when Apollo servers are down › with non-retryable error

    The family was unexpectedly 4.

      1959 |           fakeUsageReportingServer.address() as AddressInfo;
      1960 |         if (family !== 'IPv4') {
    > 1961 |           throw new Error(`The family was unexpectedly ${family}.`);
           |                 ^
      1962 |         }
      1963 |
      1964 |         const fakeUsageReportingUrl = `http://${address}:${port}`;

      at makeFakeUsageReportingServer (../apollo-server-integration-testsuite/src/ApolloServer.ts:1961:17)
      at testWithStatus (../apollo-server-integration-testsuite/src/ApolloServer.ts:1985:13)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:2078:11)

PASS packages/apollo-datasource-rest/src/__tests__/HTTPCache.test.ts
  HTTPCache
    ✓ fetches a response from the origin when not cached (40 ms)
    ✓ returns a cached response when not expired (6 ms)
    ✓ fetches a fresh response from the origin when expired (19 ms)
    ✓ allows specifying a custom cache key (3 ms)
    ✓ does not store a response to a non-GET request (1 ms)
    ✓ does not store a response with a non-success status code
    ✓ does not store a response without Cache-Control header
    ✓ does not store a private response (10 ms)
    ✓ returns a cached response when Vary header fields match (15 ms)
    ✓ does not return a cached response when Vary header fields don't match (6 ms)
    ✓ sets the TTL as max-age when the response does not contain revalidation headers (12 ms)
    ✓ sets the TTL as 2 * max-age when the response contains an ETag header (1 ms)
    ✓ revalidates a cached response when expired and returns the cached response when not modified (11 ms)
    ✓ revalidates a cached response when expired and returns and caches a fresh response when modified (5 ms)
    ✓ fetches a response from the origin with a custom fetch function (3 ms)
    overriding TTL
      ✓ returns a cached response when the overridden TTL is not expired (8 ms)
      ✓ fetches a fresh response from the origin when the overridden TTL expired (12 ms)
      ✓ fetches a fresh response from the origin when the overridden TTL expired even if a longer max-age has been specified (4 ms)
      ✓ does not store a response with an overridden TTL and a non-success status code (2 ms)
      ✓ allows overriding the TTL dynamically (46 ms)
      ✓ allows disabling caching when the TTL is 0 (falsy) (3 ms)

FAIL packages/apollo-server-fastify/src/__tests__/ApolloServer.test.ts (23.218 s)
  apollo-server-fastify
    ApolloServer
      constructor
        validation rules
          ✓ accepts additional rules (661 ms)
          ✓ allows introspection by default (90 ms)
          ✓ prevents introspection by default during production (65 ms)
          ✓ allows introspection to be enabled explicitly (150 ms)
          ✓ prohibits providing a gateway in addition to schema/typeDefs/resolvers (16 ms)
        appropriate error for bad user input
          ✓ variable coercion errors (109 ms)
          ✓ catches required type variable error and returns UserInputError (83 ms)
          ✓ catches required List type variable error and returns UserInputError (170 ms)
          ✓ catches non-null type variable error and returns UserInputError (211 ms)
          ✓ catches non-null List type variable error and returns UserInputError (117 ms)
          ✓ catches List of non-null type variable error and returns UserInputError (64 ms)
        schema creation
          ✓ accepts typeDefs and resolvers (75 ms)
          ✓ accepts a gateway's schema and calls its executor (69 ms)
          ✓ rejected load promise is thrown by server.start (7 ms)
          ✓ not calling start causes a clear error (34 ms)
          ✓ uses schema over resolvers + typeDefs (61 ms)
          ✓ allows mocks as boolean (82 ms)
          ✓ allows mocks as an object (99 ms)
          ✓ allows mocks as an object without overriding the existing resolvers (150 ms)
      Plugins
        ✓ works when using executeOperation (73 ms)
        ✓ returns correct status code for a normal operation (66 ms)
        ✓ allows setting a custom status code for an error (95 ms)
        ✓ preserves user-added "extensions" in the response when parsing errors occur (93 ms)
        ✓ preserves user-added "extensions" in the response when validation errors occur (84 ms)
      formatError
        ✓ wraps thrown error from validation rules (59 ms)
        ✓ works with errors similar to GraphQL errors, such as yup (120 ms)
      lifecycle
        ✓ errors thrown in plugins call formatError and are wrapped (72 ms)
        ✓ propagates error codes in production (68 ms)
        ✓ propagates error codes with null response in production (67 ms)
        ✓ shows ApolloError extensions in extensions (only!) (76 ms)
        for Apollo usage reporting
          traces
            ✕ cachePolicy (13 ms)
            ✕ does not expose stack (7 ms)
            ✕ sets the trace key to operationName when it is defined (3 ms)
            ✕ sets the trace key to unknown operation for missing operation (3 ms)
            ✕ sets the trace key to parse failure when non-parsable gql (2 ms)
            ✕ sets the trace key to validation failure when invalid operation (3 ms)
            ✕ sets the trace key to "-" when operationName is undefined (3 ms)
            ✕ doesn't resort to query body signature on `didResolveOperation` error (2 ms)
            ✕ doesn't internal server error on an APQ (15 ms)
            error munging
              ✕ undefined error (2 ms)
              rewriteError
                ✕ new error (12 ms)
                ✕ modified error (16 ms)
                ✕ nulled error (5 ms)
        context field
          ✓ defers context eval with thunk until after options creation (132 ms)
          context cloning
            ✓ clones the context for request pipeline requests (106 ms)
            ✓ for every request with executeOperation (66 ms)
          as a function
            ✓ can accept and return `req` (108 ms)
            ✓ can accept nothing and return an empty object (65 ms)
            ✓ can be an async function (92 ms)
            ✓ returns thrown context error as a valid graphql result (53 ms)
          as an object
            ✓ can be an empty object (58 ms)
            ✓ can contain arbitrary values (72 ms)
      Persisted Queries
        ✓ returns PersistedQueryNotFound on the first try (85 ms)
        ✓ returns result on the second try (93 ms)
        ✓ returns result on the persisted query (96 ms)
        ✓ returns error when hash does not match (77 ms)
        ✓ returns correct result for persisted query link (155 ms)
        ✓ returns correct result for persisted query link using get request (111 ms)
      usage reporting
        graphql server functions even when Apollo servers are down
          ✕ with retryable error (3 ms)
          ✕ with network error (1 ms)
          ✕ with non-retryable error (1 ms)
      Federated tracing
        ✓ doesn't include federated trace without the special header (90 ms)
        ✓ doesn't include federated trace without _Service in the schema (77 ms)
        ✓ reports a total duration that is longer than the duration of its resolvers (98 ms)
        ✓ includes errors in federated trace (134 ms)
      Response caching
        ✓ basic caching (465 ms)
      Gateway
        ✓ receives schema updates from the gateway (with document store: true) (138 ms)
        ✓ receives schema updates from the gateway (with document store: false) (140 ms)
        ✓ passes apollo data to the gateway (228 ms)
        ✓ unsubscribes from schema update on close (67 ms)
        ✓ waits until gateway has resolved a schema to respond to queries (52 ms)
        ✓ can serve multiple active schemas simultaneously during a schema rollover (201 ms)
      renderLandingPage
        ✓ defaults to LocalDefault (160 ms)
        ✓ can specify version for LocalDefault (122 ms)
        ✓ can install playground with specific version (119 ms)
        ✓ can be disabled (69 ms)
        basic functionality
          with non-root graphqlPath
            ✓ basic GET works (126 ms)
            ✓ only mounts under graphqlPath (99 ms)
            ✓ needs the header (67 ms)
            ✓ trailing slash works (79 ms)
          with root graphqlPath
            ✓ basic GET works (65 ms)
            ✓ needs the header (65 ms)
        startup errors
          ✓ only one plugin can implement renderLandingPage (32 ms)
      CSRF prevention
        ✓ csrfPrevention: true (271 ms)
        ✓ csrfPrevention: {requestHeaders} (111 ms)
    constructor
      ✓ accepts typeDefs and resolvers (48 ms)
    createGraphQLServerOptions
      ✓ provides FastifyRequest and FastifyReply to ContextFunction (78 ms)
    applyMiddleware
      ✓ can be queried (77 ms)
      ✓ renders landing page by default when browser requests (81 ms)
      ✓ accepts cors configuration (121 ms)
      health checks
        ✓ creates a health check endpoint (112 ms)
        ✓ provides a callback for the health check (66 ms)
        ✓ can disable the healthCheck (78 ms)
      errors
        ✓ returns thrown context error as a valid graphql result (107 ms)
        ✓ propagates error codes in dev mode (90 ms)
        ✓ propagates error codes in production (69 ms)
        ✓ propagates error codes with null response in production (105 ms)
    extensions
      Cache Control Headers
        ✓ applies cacheControl Headers (106 ms)
        ✓ contains no cacheControl Headers when uncacheable (96 ms)
        ✓ contains private cacheControl Headers when scoped (92 ms)
        ✓ runs when cache-control is false (66 ms)

  ● apollo-server-fastify › ApolloServer › lifecycle › for Apollo usage reporting › traces › cachePolicy

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1063:19)

  ● apollo-server-fastify › ApolloServer › lifecycle › for Apollo usage reporting › traces › does not expose stack

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1090:19)

  ● apollo-server-fastify › ApolloServer › lifecycle › for Apollo usage reporting › traces › sets the trace key to operationName when it is defined

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1123:19)

  ● apollo-server-fastify › ApolloServer › lifecycle › for Apollo usage reporting › traces › sets the trace key to unknown operation for missing operation

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1142:19)

  ● apollo-server-fastify › ApolloServer › lifecycle › for Apollo usage reporting › traces › sets the trace key to parse failure when non-parsable gql

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1158:19)

  ● apollo-server-fastify › ApolloServer › lifecycle › for Apollo usage reporting › traces › sets the trace key to validation failure when invalid operation

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1173:19)

  ● apollo-server-fastify › ApolloServer › lifecycle › for Apollo usage reporting › traces › sets the trace key to "-" when operationName is undefined

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1188:19)

  ● apollo-server-fastify › ApolloServer › lifecycle › for Apollo usage reporting › traces › doesn't resort to query body signature on `didResolveOperation` error

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1205:19)

  ● apollo-server-fastify › ApolloServer › lifecycle › for Apollo usage reporting › traces › doesn't internal server error on an APQ

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1234:19)

  ● apollo-server-fastify › ApolloServer › lifecycle › for Apollo usage reporting › traces › error munging › rewriteError › new error

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1278:23)

  ● apollo-server-fastify › ApolloServer › lifecycle › for Apollo usage reporting › traces › error munging › rewriteError › modified error

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1321:23)

  ● apollo-server-fastify › ApolloServer › lifecycle › for Apollo usage reporting › traces › error munging › rewriteError › nulled error

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1366:23)

  ● apollo-server-fastify › ApolloServer › lifecycle › for Apollo usage reporting › traces › error munging › undefined error

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1403:21)

  ● apollo-server-fastify › ApolloServer › usage reporting › graphql server functions even when Apollo servers are down › with retryable error

    The family was unexpectedly 4.

      1959 |           fakeUsageReportingServer.address() as AddressInfo;
      1960 |         if (family !== 'IPv4') {
    > 1961 |           throw new Error(`The family was unexpectedly ${family}.`);
           |                 ^
      1962 |         }
      1963 |
      1964 |         const fakeUsageReportingUrl = `http://${address}:${port}`;

      at makeFakeUsageReportingServer (../apollo-server-integration-testsuite/src/ApolloServer.ts:1961:17)
      at testWithStatus (../apollo-server-integration-testsuite/src/ApolloServer.ts:1985:13)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:2072:11)

  ● apollo-server-fastify › ApolloServer › usage reporting › graphql server functions even when Apollo servers are down › with network error

    The family was unexpectedly 4.

      1959 |           fakeUsageReportingServer.address() as AddressInfo;
      1960 |         if (family !== 'IPv4') {
    > 1961 |           throw new Error(`The family was unexpectedly ${family}.`);
           |                 ^
      1962 |         }
      1963 |
      1964 |         const fakeUsageReportingUrl = `http://${address}:${port}`;

      at makeFakeUsageReportingServer (../apollo-server-integration-testsuite/src/ApolloServer.ts:1961:17)
      at testWithStatus (../apollo-server-integration-testsuite/src/ApolloServer.ts:1985:13)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:2075:11)

  ● apollo-server-fastify › ApolloServer › usage reporting › graphql server functions even when Apollo servers are down › with non-retryable error

    The family was unexpectedly 4.

      1959 |           fakeUsageReportingServer.address() as AddressInfo;
      1960 |         if (family !== 'IPv4') {
    > 1961 |           throw new Error(`The family was unexpectedly ${family}.`);
           |                 ^
      1962 |         }
      1963 |
      1964 |         const fakeUsageReportingUrl = `http://${address}:${port}`;

      at makeFakeUsageReportingServer (../apollo-server-integration-testsuite/src/ApolloServer.ts:1961:17)
      at testWithStatus (../apollo-server-integration-testsuite/src/ApolloServer.ts:1985:13)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:2078:11)

PASS packages/apollo-server-core/src/plugin/cacheControl/__tests__/cacheControlDirective.test.ts
  @cacheControl directives
    ✓ should set maxAge: 0 and no scope for a field without cache hints (108 ms)
    ✓ should set maxAge: 0 and no scope for a top-level scalar field without cache hints (10 ms)
    ✓ should set maxAge to the default and no scope for a field without cache hints (13 ms)
    ✓ should set the specified maxAge from a cache hint on the field (18 ms)
    ✓ should set the specified maxAge for a field from a cache hint on the target type (20 ms)
    ✓ should set the specified maxAge for a field from a cache hint on the target type extension (33 ms)
    ✓ should overwrite the default maxAge when maxAge=0 is specified on the type (28 ms)
    ✓ should override the maxAge from the target type with that specified on a field (27 ms)
    ✓ should override the maxAge from the target type with that specified on a field, keeping the scope (11 ms)
    ✓ should override the scope from the target type with that specified on a field (12 ms)
    ✓ inheritMaxAge (58 ms)
    ✓ inheritMaxAge docs examples (36 ms)
    ✓ inheritMaxAge can be combined with scope (59 ms)
    ✓ inheritMaxAge on types (42 ms)
    ✓ scalars can inherit from grandparents (43 ms)

ts-jest[ts-compiler] (WARN) [96mpackages/apollo-server-core/src/plugin/drainHttpServer/__tests__/stoppable.test.ts[0m:[93m37[0m:[93m1[0m - [91merror[0m[90m TS1371: [0mThis import is never used as a value and must use 'import type' because 'importsNotUsedAsValues' is set to 'error'.

[7m37[0m import { AddressInfo } from 'net';
[7m  [0m [91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
PASS packages/apollo-server-core/src/plugin/drainHttpServer/__tests__/stoppable.test.ts (6.442 s)
  http.Server
    ✓ with a 0.5s grace period (530 ms)
    ✓ with requests in-flight (549 ms)
    ✓ with in-flights finishing before grace period ends (1037 ms)
    .close()
      ✓ without keep-alive connections (65 ms)
      ✓ with keep-alive connections (20 ms)
    Stopper
      ✓ without keep-alive connections (21 ms)
      ✓ with keep-alive connections (11 ms)
  https.Server
    ✓ with a 0.5s grace period (566 ms)
    ✓ with requests in-flight (571 ms)
    .close()
      ✓ without keep-alive connections (344 ms)
      ✓ with keep-alive connections (21 ms)
    Stopper
      ✓ without keep-alive connections (23 ms)
      ✓ with keep-alive connections (28 ms)

PASS packages/apollo-server-azure-functions/src/__tests__/azureFunctionApollo.test.ts (8.466 s)
  integration:AzureFunctions
    ✓ can append CORS headers to GET request (36 ms)
    ✓ can handle OPTIONS request with CORS headers (20 ms)
    ✓ can return landing page (17 ms)
    apolloServer
      ✓ calls serverWillStart before serving a request (16 ms)
      graphqlHTTP
        ✓ rejects the request if the method is not POST or GET (90 ms)
        ✓ throws an error if POST body is empty (24 ms)
        ✓ throws an error if POST body is missing even with content-type (23 ms)
        ✓ throws an error if invalid content-type (92 ms)
        ✓ throws an error if POST operation is missing (88 ms)
        ✓ throws an error if POST operation is empty (159 ms)
        ✓ throws an error if POST JSON is malformed (28 ms)
        ✓ throws an error if GET query is missing (56 ms)
        ✓ can handle a basic GET request (68 ms)
        ✓ can handle a basic implicit GET request (21 ms)
        ✓ throws error if trying to use mutation using GET request (94 ms)
        ✓ throws error if trying to use mutation with fragment using GET request (42 ms)
        ✓ can handle a GET request with variables (56 ms)
        ✓ can handle a basic request (29 ms)
        ✓ cache-control not set without any hints (24 ms)
        ✓ cache-control set with dynamic hint (20 ms)
        ✓ cache-control set with defaultMaxAge (45 ms)
        ✓ returns PersistedQueryNotSupported to a GET request if PQs disabled (25 ms)
        ✓ returns PersistedQueryNotSupported to a POST request if PQs disabled (39 ms)
        ✓ returns PersistedQueryNotFound to a GET request (31 ms)
        ✓ returns PersistedQueryNotFound to a POST request (23 ms)
        ✓ can handle a request with variables (20 ms)
        ✓ can handle a request with variables as string (27 ms)
        ✓ can handle a request with variables as an invalid string (42 ms)
        ✓ can handle a request with operationName (32 ms)
        ✓ can handle introspection request (111 ms)
        ✓ does not accept a query AST (21 ms)
        ✓ can handle batch requests (19 ms)
        ✓ can handle batch requests (19 ms)
        ✓ can handle batch requests in parallel (252 ms)
        ✓ disables batch requests when allowBatchedHttpRequests is false (57 ms)
        ✓ clones batch context (35 ms)
        ✓ executes batch context if it is a function (38 ms)
        ✓ can handle a request with a mutation (61 ms)
        ✓ applies the formatResponse function (19 ms)
        ✓ passes the context to the resolver (26 ms)
        ✓ passes the rootValue to the resolver (34 ms)
        ✓ passes the rootValue function result to the resolver (44 ms)
        ✓ returns errors (51 ms)
        ✓ applies formatError if provided (57 ms)
        ✓ formatError receives error that passes instanceof checks (22 ms)
        ✓ allows for custom error formatting to sanitize (43 ms)
        ✓ allows for custom error formatting to elaborate (77 ms)
        ✓ sends internal server error when formatError fails (30 ms)
        ✓ applies additional validationRules (43 ms)
        cors enabled by default
          ✓ for POST request (21 ms)
          ✓ for OPTIONS preflight request (26 ms)
      status code
        ✓ allows setting a custom status code (31 ms)
      Persisted Queries
        ✓ when ttlSeconds is set, passes ttl to the apq cache set call (40 ms)
        ✓ when ttlSeconds is unset, ttl is not passed to apq cache (19 ms)
        ✓ errors when version is not specified (71 ms)
        ✓ errors when version is unsupported (53 ms)
        ✓ errors when hash is mismatched (21 ms)
        ✓ returns PersistedQueryNotFound on the first try (44 ms)
        ✓ returns result on the second try (83 ms)
        ✓ returns with batched persisted queries (51 ms)
        ✓ returns result on the persisted query (31 ms)
        ✓ returns error when hash does not match (53 ms)
        ✓ returns correct result using get request (40 ms)
    health checks
      ✓ creates a health check endpoint (18 ms)
      ✓ provides a callback for the health check (18 ms)
      ✓ returns a 503 if health check fails (26 ms)

PASS packages/apollo-server-core/src/__tests__/ApolloServerBase.test.ts (6.235 s)
  ApolloServerBase construction
    ✓ succeeds when a valid configuration options are provided to typeDefs and resolvers (623 ms)
    ✓ succeeds when a valid GraphQLSchema is provided to the schema configuration option (59 ms)
    ✓ succeeds when passed a graphVariant in construction (77 ms)
    ✓ throws when a GraphQLSchema is not provided to the schema configuration option (25 ms)
    ✓ throws when the no schema configuration option is provided (3 ms)
  ApolloServerBase start
    ✓ start throws on startup error (284 ms)
    ✓ stop throws on stop error (51 ms)
    ✓ execute throws redacted message on serverless startup error (37 ms)
  ApolloServerBase executeOperation
    ✓ returns error information without details by default (173 ms)
    ✓ returns error information with details when debug is enabled (29 ms)
    ✓ works with string (35 ms)
    ✓ works with AST (57 ms)
    ✓ parse errors (23 ms)
    ✓ passes its second argument to context function (23 ms)

FAIL packages/apollo-server-hapi/src/__tests__/ApolloServer.test.ts (17.404 s)
  apollo-server-hapi
    ApolloServer
      constructor
        validation rules
          ✓ accepts additional rules (669 ms)
          ✓ allows introspection by default (103 ms)
          ✓ prevents introspection by default during production (99 ms)
          ✓ allows introspection to be enabled explicitly (122 ms)
          ✓ prohibits providing a gateway in addition to schema/typeDefs/resolvers (39 ms)
        appropriate error for bad user input
          ✓ variable coercion errors (165 ms)
          ✓ catches required type variable error and returns UserInputError (190 ms)
          ✓ catches required List type variable error and returns UserInputError (189 ms)
          ✓ catches non-null type variable error and returns UserInputError (158 ms)
          ✓ catches non-null List type variable error and returns UserInputError (88 ms)
          ✓ catches List of non-null type variable error and returns UserInputError (77 ms)
        schema creation
          ✓ accepts typeDefs and resolvers (63 ms)
          ✓ accepts a gateway's schema and calls its executor (43 ms)
          ✓ rejected load promise is thrown by server.start (12 ms)
          ✓ not calling start causes a clear error (37 ms)
          ✓ uses schema over resolvers + typeDefs (84 ms)
          ✓ allows mocks as boolean (69 ms)
          ✓ allows mocks as an object (70 ms)
          ✓ allows mocks as an object without overriding the existing resolvers (98 ms)
      Plugins
        ✓ works when using executeOperation (140 ms)
        ✓ returns correct status code for a normal operation (183 ms)
        ✓ allows setting a custom status code for an error (121 ms)
        ✓ preserves user-added "extensions" in the response when parsing errors occur (108 ms)
        ✓ preserves user-added "extensions" in the response when validation errors occur (81 ms)
      formatError
        ✓ wraps thrown error from validation rules (85 ms)
        ✓ works with errors similar to GraphQL errors, such as yup (65 ms)
      lifecycle
        ✓ errors thrown in plugins call formatError and are wrapped (193 ms)
        ✓ propagates error codes in production (94 ms)
        ✓ propagates error codes with null response in production (117 ms)
        ✓ shows ApolloError extensions in extensions (only!) (94 ms)
        for Apollo usage reporting
          traces
            ✕ cachePolicy (18 ms)
            ✕ does not expose stack (2 ms)
            ✕ sets the trace key to operationName when it is defined (2 ms)
            ✕ sets the trace key to unknown operation for missing operation (34 ms)
            ✕ sets the trace key to parse failure when non-parsable gql (2 ms)
            ✕ sets the trace key to validation failure when invalid operation (2 ms)
            ✕ sets the trace key to "-" when operationName is undefined (3 ms)
            ✕ doesn't resort to query body signature on `didResolveOperation` error (4 ms)
            ✕ doesn't internal server error on an APQ (12 ms)
            error munging
              ✕ undefined error (3 ms)
              rewriteError
                ✕ new error (6 ms)
                ✕ modified error (2 ms)
                ✕ nulled error (2 ms)
        context field
          ✓ defers context eval with thunk until after options creation (147 ms)
          context cloning
            ✓ clones the context for request pipeline requests (115 ms)
            ✓ for every request with executeOperation (107 ms)
          as a function
            ✓ can accept and return `req` (120 ms)
            ✓ can accept nothing and return an empty object (69 ms)
            ✓ can be an async function (60 ms)
            ✓ returns thrown context error as a valid graphql result (122 ms)
          as an object
            ✓ can be an empty object (94 ms)
            ✓ can contain arbitrary values (59 ms)
      Persisted Queries
        ✓ returns PersistedQueryNotFound on the first try (60 ms)
        ✓ returns result on the second try (59 ms)
        ✓ returns result on the persisted query (52 ms)
        ✓ returns error when hash does not match (49 ms)
        ✓ returns correct result for persisted query link (68 ms)
        ✓ returns correct result for persisted query link using get request (55 ms)
      usage reporting
        graphql server functions even when Apollo servers are down
          ✕ with retryable error (2 ms)
          ✕ with network error (1 ms)
          ✕ with non-retryable error (2 ms)
      Federated tracing
        ✓ doesn't include federated trace without the special header (55 ms)
        ✓ doesn't include federated trace without _Service in the schema (85 ms)
        ✓ reports a total duration that is longer than the duration of its resolvers (138 ms)
        ✓ includes errors in federated trace (91 ms)
      Response caching
        ✓ basic caching (310 ms)
      Gateway
        ✓ receives schema updates from the gateway (with document store: true) (100 ms)
        ✓ receives schema updates from the gateway (with document store: false) (123 ms)
        ✓ passes apollo data to the gateway (280 ms)
        ✓ unsubscribes from schema update on close (74 ms)
        ✓ waits until gateway has resolved a schema to respond to queries (91 ms)
        ✓ can serve multiple active schemas simultaneously during a schema rollover (225 ms)
      renderLandingPage
        ✓ defaults to LocalDefault (56 ms)
        ✓ can specify version for LocalDefault (62 ms)
        ✓ can install playground with specific version (183 ms)
        ✓ can be disabled (52 ms)
        basic functionality
          with non-root graphqlPath
            ✓ basic GET works (116 ms)
            ✓ only mounts under graphqlPath (88 ms)
            ✓ needs the header (116 ms)
            ✓ trailing slash works (61 ms)
          with root graphqlPath
            ✓ basic GET works (67 ms)
            ✓ needs the header (70 ms)
        startup errors
          ✓ only one plugin can implement renderLandingPage (35 ms)
      CSRF prevention
        ✓ csrfPrevention: true (279 ms)
        ✓ csrfPrevention: {requestHeaders} (153 ms)
  non-integration tests
    constructor
      ✓ accepts typeDefs and resolvers (46 ms)
    applyMiddleware
      ✓ can be queried (42 ms)
      ✓ renders landing page by default when browser requests (43 ms)
      ✓ accepts cors configuration (54 ms)
      ✓ accepts custom route configuration (41 ms)
      ✓ passes each request and response toolkit through to the context function (54 ms)
      health checks
        ✓ creates a health check endpoint (48 ms)
        ✓ provides a callback for the health check (72 ms)
        ✓ can disable the healthCheck (59 ms)
      errors
        ✓ returns thrown context error as a valid graphql result (79 ms)
        ✓ propagates error codes in dev mode (70 ms)
        ✓ propagates error codes in production (71 ms)
        ✓ propagates error codes with null response in production (69 ms)

  ● apollo-server-hapi › ApolloServer › lifecycle › for Apollo usage reporting › traces › cachePolicy

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1063:19)

  ● apollo-server-hapi › ApolloServer › lifecycle › for Apollo usage reporting › traces › does not expose stack

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1090:19)

  ● apollo-server-hapi › ApolloServer › lifecycle › for Apollo usage reporting › traces › sets the trace key to operationName when it is defined

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1123:19)

  ● apollo-server-hapi › ApolloServer › lifecycle › for Apollo usage reporting › traces › sets the trace key to unknown operation for missing operation

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1142:19)

  ● apollo-server-hapi › ApolloServer › lifecycle › for Apollo usage reporting › traces › sets the trace key to parse failure when non-parsable gql

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1158:19)

  ● apollo-server-hapi › ApolloServer › lifecycle › for Apollo usage reporting › traces › sets the trace key to validation failure when invalid operation

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1173:19)

  ● apollo-server-hapi › ApolloServer › lifecycle › for Apollo usage reporting › traces › sets the trace key to "-" when operationName is undefined

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1188:19)

  ● apollo-server-hapi › ApolloServer › lifecycle › for Apollo usage reporting › traces › doesn't resort to query body signature on `didResolveOperation` error

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1205:19)

  ● apollo-server-hapi › ApolloServer › lifecycle › for Apollo usage reporting › traces › doesn't internal server error on an APQ

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1234:19)

  ● apollo-server-hapi › ApolloServer › lifecycle › for Apollo usage reporting › traces › error munging › rewriteError › new error

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1278:23)

  ● apollo-server-hapi › ApolloServer › lifecycle › for Apollo usage reporting › traces › error munging › rewriteError › modified error

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1321:23)

  ● apollo-server-hapi › ApolloServer › lifecycle › for Apollo usage reporting › traces › error munging › rewriteError › nulled error

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1366:23)

  ● apollo-server-hapi › ApolloServer › lifecycle › for Apollo usage reporting › traces › error munging › undefined error

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1403:21)

  ● apollo-server-hapi › ApolloServer › usage reporting › graphql server functions even when Apollo servers are down › with retryable error

    The family was unexpectedly 4.

      1959 |           fakeUsageReportingServer.address() as AddressInfo;
      1960 |         if (family !== 'IPv4') {
    > 1961 |           throw new Error(`The family was unexpectedly ${family}.`);
           |                 ^
      1962 |         }
      1963 |
      1964 |         const fakeUsageReportingUrl = `http://${address}:${port}`;

      at makeFakeUsageReportingServer (../apollo-server-integration-testsuite/src/ApolloServer.ts:1961:17)
      at testWithStatus (../apollo-server-integration-testsuite/src/ApolloServer.ts:1985:13)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:2072:11)

  ● apollo-server-hapi › ApolloServer › usage reporting › graphql server functions even when Apollo servers are down › with network error

    The family was unexpectedly 4.

      1959 |           fakeUsageReportingServer.address() as AddressInfo;
      1960 |         if (family !== 'IPv4') {
    > 1961 |           throw new Error(`The family was unexpectedly ${family}.`);
           |                 ^
      1962 |         }
      1963 |
      1964 |         const fakeUsageReportingUrl = `http://${address}:${port}`;

      at makeFakeUsageReportingServer (../apollo-server-integration-testsuite/src/ApolloServer.ts:1961:17)
      at testWithStatus (../apollo-server-integration-testsuite/src/ApolloServer.ts:1985:13)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:2075:11)

  ● apollo-server-hapi › ApolloServer › usage reporting › graphql server functions even when Apollo servers are down › with non-retryable error

    The family was unexpectedly 4.

      1959 |           fakeUsageReportingServer.address() as AddressInfo;
      1960 |         if (family !== 'IPv4') {
    > 1961 |           throw new Error(`The family was unexpectedly ${family}.`);
           |                 ^
      1962 |         }
      1963 |
      1964 |         const fakeUsageReportingUrl = `http://${address}:${port}`;

      at makeFakeUsageReportingServer (../apollo-server-integration-testsuite/src/ApolloServer.ts:1961:17)
      at testWithStatus (../apollo-server-integration-testsuite/src/ApolloServer.ts:1985:13)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:2078:11)

PASS packages/apollo-server/src/__tests__/index.test.ts (10.33 s)
  apollo-server
    constructor
      ✓ accepts typeDefs and resolvers (3 ms)
      ✓ accepts typeDefs and mocks (1 ms)
      ✓ runs serverWillStart and serverWillStop (161 ms)
      stops even with open HTTP connections
        ✓ all connections are idle (50 ms)
        ✓ a connection with an active HTTP request (235 ms)
      context field
        as a function
          ✓ can accept and return `req` (35 ms)
          ✓ can accept nothing and return an empty object (64 ms)
      as an object
        ✓ can be an empty object (76 ms)
        ✓ can contain arbitrary values (90 ms)
    without registerServer
      ✓ can be queried (59 ms)
      ✓ can use executeOperation (21 ms)
      ✓ renders landing page when browser requests (104 ms)
      ✓ configures cors (46 ms)
      ✓ configures cors (39 ms)
      ✓ creates a health check endpoint (34 ms)

PASS packages/apollo-server-core/src/plugin/usageReporting/__tests__/traceDetails.test.ts
  check variableJson output for sendVariableValues null or undefined (default)
    ✓ Case 1: No keys/values in variables to be filtered/not filtered (9 ms)
    ✓ Case 2: Filter all variables (20 ms)
  check variableJson output for sendVariableValues all/none type
    ✓ Case 1: No keys/values in variables to be filtered/not filtered (2 ms)
    ✓ Case 2: Filter all variables (2 ms)
    ✓ Case 3: Do not filter variables (12 ms)
    ✓ Case 4: Check behavior for invalid inputs (1 ms)
  variableJson output for sendVariableValues exceptNames: Array type
    ✓ array contains some values not in keys (1 ms)
    ✓ none=true equivalent to exceptNames=[all variables] (1 ms)
  variableJson output for sendVariableValues onlyNames: Array type
    ✓ array contains some values not in keys (1 ms)
    ✓ all=true equivalent to onlyNames=[all variables]
    ✓ none=true equivalent to onlyNames=[] (1 ms)
  variableJson output for sendVariableValues transform: custom function type
    ✓ test custom function that redacts every variable to some value (2 ms)
    ✓ original keys in variables should match the modified keys (17 ms)
    ✓ expect empty string for keys removed by the custom modifier (1 ms)
    ✓ expect stringify(null) for values set to null by custom modifier
    ✓ redact all variable values when custom modifier throws an error (10 ms)

PASS packages/apollo-server-core/src/__tests__/errors.test.ts
  Errors
    ApolloError
      ✓ defaults code to INTERNAL_SERVER_ERROR (13 ms)
      ✓ allows code setting and additional properties (34 ms)
    formatApolloErrors
      ✓ exposes a stacktrace in debug mode (47 ms)
      ✓ hides stacktrace by default (6 ms)
      ✓ exposes fields on error under exception field and provides code (6 ms)
      ✓ calls formatter after exposing the code and stacktrace (5 ms)
      ✓ Formats native Errors in a JSON-compatible way (1 ms)
    Named Errors
      ✓ provides an authentication error (12 ms)
      ✓ provides a forbidden error (1 ms)
      ✓ provides a syntax error (2 ms)
      ✓ provides a validation error (2 ms)
      ✓ provides a user input error (5 ms)

PASS packages/apollo-server-core/src/plugin/cacheControl/__tests__/dynamicCacheControl.test.ts
  dynamic cache control
    ✓ should set the maxAge for a field from a dynamic cache hint (105 ms)
    ✓ can use restrict to set the maxAge for a field (20 ms)
    ✓ should set the scope for a field from a dynamic cache hint (19 ms)
    ✓ should override the maxAge set for a field from a dynamic cache hint (11 ms)

PASS packages/apollo-server-koa/src/__tests__/datasource.test.ts (7.452 s)
  apollo-server-koa
    ✓ uses the cache (245 ms)
    ✓ can cache a string from the backend (42 ms)

PASS packages/apollo-server-micro/src/__tests__/ApolloServer.test.ts (10.459 s)
  apollo-server-micro
    constructor
      ✓ should accepts typeDefs and resolvers (162 ms)
    #createHandler
      querying
        ✓ should be queryable using the default /graphql path, if no path is provided (260 ms)
        ✓ should only be queryable at the default /graphql path, if no path is provided (66 ms)
        ✓ should be queryable using a custom path (74 ms)
        ✓ should render a landing page when a browser sends in a request (111 ms)
      health checks
        ✓ should create a health check endpoint (53 ms)
        ✓ should support a health check callback (80 ms)
        ✓ should be able to disable the health check (44 ms)

PASS packages/apollo-server-core/src/plugin/usageReporting/__tests__/durationHistogram.test.ts
  Duration histogram tests
    ✓ generateEmptyHistogram (41 ms)
    ✓ nonEmptyHistogram (3 ms)
    ✓ testToArray (112 ms)
    ✓ combineHistogram (1 ms)
    ✓ bucketZeroToOne (10 ms)
    ✓ bucketOneToTwo (2 ms)
    ✓ bucketToThreshold (1 ms)
    ✓ bucketForCommonTimes (2 ms)
    ✓ testLastBucket (4 ms)

PASS packages/apollo-server-express/src/__tests__/datasource.test.ts (5.053 s)
  apollo-server-express
    ✓ uses the cache (244 ms)
    ✓ can cache a string from the backend (64 ms)

PASS packages/apollo-server-core/src/__tests__/runHttpQuery.test.ts
  runHttpQuery
    handling a GET query
      ✓ raises a 400 error if the query is missing (162 ms)
    when allowBatchedHttpRequests is false
      ✓ succeeds when there are no batched queries in the request (63 ms)
      ✓ throws when there are batched queries in the request (3 ms)
    when allowBatchedHttpRequests is true
      ✓ succeeds when there are multiple queries in the request (10 ms)

FAIL packages/apollo-server-lambda/src/__tests__/ApolloServer.test.ts (15.432 s)
  apollo-server-lambda
    ✓ expressAppFromMiddleware (31 ms)
    ApolloServer
      constructor
        validation rules
          ✓ accepts additional rules (540 ms)
          ✓ allows introspection by default (37 ms)
          ✓ prevents introspection by default during production (51 ms)
          ✓ allows introspection to be enabled explicitly (117 ms)
          ✓ prohibits providing a gateway in addition to schema/typeDefs/resolvers (6 ms)
        appropriate error for bad user input
          ✓ variable coercion errors (166 ms)
          ✓ catches required type variable error and returns UserInputError (49 ms)
          ✓ catches required List type variable error and returns UserInputError (138 ms)
          ✓ catches non-null type variable error and returns UserInputError (99 ms)
          ✓ catches non-null List type variable error and returns UserInputError (41 ms)
          ✓ catches List of non-null type variable error and returns UserInputError (42 ms)
        schema creation
          ✓ accepts typeDefs and resolvers (32 ms)
          ✓ accepts a gateway's schema and calls its executor (32 ms)
          ✓ uses schema over resolvers + typeDefs (51 ms)
          ✓ allows mocks as boolean (70 ms)
          ✓ allows mocks as an object (62 ms)
          ✓ allows mocks as an object without overriding the existing resolvers (97 ms)
      Plugins
        ✓ works when using executeOperation (17 ms)
        ✓ returns correct status code for a normal operation (20 ms)
        ✓ allows setting a custom status code for an error (35 ms)
        ✓ preserves user-added "extensions" in the response when parsing errors occur (96 ms)
        ✓ preserves user-added "extensions" in the response when validation errors occur (47 ms)
      formatError
        ✓ wraps thrown error from validation rules (78 ms)
        ✓ works with errors similar to GraphQL errors, such as yup (65 ms)
      lifecycle
        ✓ errors thrown in plugins call formatError and are wrapped (33 ms)
        ✓ propagates error codes in production (32 ms)
        ✓ propagates error codes with null response in production (31 ms)
        ✓ shows ApolloError extensions in extensions (only!) (35 ms)
        for Apollo usage reporting
          traces
            ✕ cachePolicy (22 ms)
            ✕ does not expose stack (5 ms)
            ✕ sets the trace key to operationName when it is defined (3 ms)
            ✕ sets the trace key to unknown operation for missing operation (3 ms)
            ✕ sets the trace key to parse failure when non-parsable gql (3 ms)
            ✕ sets the trace key to validation failure when invalid operation (11 ms)
            ✕ sets the trace key to "-" when operationName is undefined (3 ms)
            ✕ doesn't resort to query body signature on `didResolveOperation` error (9 ms)
            ✕ doesn't internal server error on an APQ (6 ms)
            error munging
              ✕ undefined error (2 ms)
              rewriteError
                ✕ new error (3 ms)
                ✕ modified error (5 ms)
                ✕ nulled error (9 ms)
        context field
          ✓ defers context eval with thunk until after options creation (75 ms)
          context cloning
            ✓ clones the context for request pipeline requests (62 ms)
            ✓ for every request with executeOperation (37 ms)
          as a function
            ✓ can accept and return `req` (25 ms)
            ✓ can accept nothing and return an empty object (32 ms)
            ✓ can be an async function (24 ms)
            ✓ returns thrown context error as a valid graphql result (25 ms)
          as an object
            ✓ can be an empty object (23 ms)
            ✓ can contain arbitrary values (15 ms)
      Persisted Queries
        ✓ returns PersistedQueryNotFound on the first try (26 ms)
        ✓ returns result on the second try (32 ms)
        ✓ returns result on the persisted query (30 ms)
        ✓ returns error when hash does not match (21 ms)
        ✓ returns correct result for persisted query link (53 ms)
        ✓ returns correct result for persisted query link using get request (50 ms)
      usage reporting
        graphql server functions even when Apollo servers are down
          ✕ with retryable error (2 ms)
          ✕ with network error (2 ms)
          ✕ with non-retryable error (1 ms)
      Federated tracing
        ✓ doesn't include federated trace without the special header (38 ms)
        ✓ doesn't include federated trace without _Service in the schema (55 ms)
        ✓ reports a total duration that is longer than the duration of its resolvers (94 ms)
        ✓ includes errors in federated trace (55 ms)
      Response caching
        ✓ basic caching (562 ms)
      Gateway
        ✓ receives schema updates from the gateway (with document store: true) (93 ms)
        ✓ receives schema updates from the gateway (with document store: false) (77 ms)
        ✓ passes apollo data to the gateway (229 ms)
        ✓ unsubscribes from schema update on close (56 ms)
        ✓ waits until gateway has resolved a schema to respond to queries (22 ms)
        ✓ can serve multiple active schemas simultaneously during a schema rollover (75 ms)
      renderLandingPage
        ✓ defaults to LocalDefault (69 ms)
        ✓ can specify version for LocalDefault (28 ms)
        ✓ can install playground with specific version (77 ms)
        ✓ can be disabled (22 ms)
        basic functionality
          with non-root graphqlPath
            ✓ basic GET works (25 ms)
            ✓ only mounts under graphqlPath (40 ms)
            ✓ needs the header (27 ms)
            ✓ trailing slash works (30 ms)
          with root graphqlPath
            ✓ basic GET works (27 ms)
            ✓ needs the header (18 ms)
      CSRF prevention
        ✓ csrfPrevention: true (122 ms)
        ✓ csrfPrevention: {requestHeaders} (86 ms)
    context
      ✓ context functions typecheck (21 ms)
      ✓ receives both Express and Lambda context (36 ms)
    health checks
      ✓ creates a health check endpoint (77 ms)
      ✓ provides a callback for the health check (49 ms)
      ✓ returns a 503 if health check fails (52 ms)

  ● apollo-server-lambda › ApolloServer › lifecycle › for Apollo usage reporting › traces › cachePolicy

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1063:19)

  ● apollo-server-lambda › ApolloServer › lifecycle › for Apollo usage reporting › traces › does not expose stack

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1090:19)

  ● apollo-server-lambda › ApolloServer › lifecycle › for Apollo usage reporting › traces › sets the trace key to operationName when it is defined

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1123:19)

  ● apollo-server-lambda › ApolloServer › lifecycle › for Apollo usage reporting › traces › sets the trace key to unknown operation for missing operation

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1142:19)

  ● apollo-server-lambda › ApolloServer › lifecycle › for Apollo usage reporting › traces › sets the trace key to parse failure when non-parsable gql

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1158:19)

  ● apollo-server-lambda › ApolloServer › lifecycle › for Apollo usage reporting › traces › sets the trace key to validation failure when invalid operation

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1173:19)

  ● apollo-server-lambda › ApolloServer › lifecycle › for Apollo usage reporting › traces › sets the trace key to "-" when operationName is undefined

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1188:19)

  ● apollo-server-lambda › ApolloServer › lifecycle › for Apollo usage reporting › traces › doesn't resort to query body signature on `didResolveOperation` error

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1205:19)

  ● apollo-server-lambda › ApolloServer › lifecycle › for Apollo usage reporting › traces › doesn't internal server error on an APQ

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1234:19)

  ● apollo-server-lambda › ApolloServer › lifecycle › for Apollo usage reporting › traces › error munging › rewriteError › new error

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1278:23)

  ● apollo-server-lambda › ApolloServer › lifecycle › for Apollo usage reporting › traces › error munging › rewriteError › modified error

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1321:23)

  ● apollo-server-lambda › ApolloServer › lifecycle › for Apollo usage reporting › traces › error munging › rewriteError › nulled error

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1366:23)

  ● apollo-server-lambda › ApolloServer › lifecycle › for Apollo usage reporting › traces › error munging › undefined error

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1403:21)

  ● apollo-server-lambda › ApolloServer › usage reporting › graphql server functions even when Apollo servers are down › with retryable error

    The family was unexpectedly 4.

      1959 |           fakeUsageReportingServer.address() as AddressInfo;
      1960 |         if (family !== 'IPv4') {
    > 1961 |           throw new Error(`The family was unexpectedly ${family}.`);
           |                 ^
      1962 |         }
      1963 |
      1964 |         const fakeUsageReportingUrl = `http://${address}:${port}`;

      at makeFakeUsageReportingServer (../apollo-server-integration-testsuite/src/ApolloServer.ts:1961:17)
      at testWithStatus (../apollo-server-integration-testsuite/src/ApolloServer.ts:1985:13)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:2072:11)

  ● apollo-server-lambda › ApolloServer › usage reporting › graphql server functions even when Apollo servers are down › with network error

    The family was unexpectedly 4.

      1959 |           fakeUsageReportingServer.address() as AddressInfo;
      1960 |         if (family !== 'IPv4') {
    > 1961 |           throw new Error(`The family was unexpectedly ${family}.`);
           |                 ^
      1962 |         }
      1963 |
      1964 |         const fakeUsageReportingUrl = `http://${address}:${port}`;

      at makeFakeUsageReportingServer (../apollo-server-integration-testsuite/src/ApolloServer.ts:1961:17)
      at testWithStatus (../apollo-server-integration-testsuite/src/ApolloServer.ts:1985:13)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:2075:11)

  ● apollo-server-lambda › ApolloServer › usage reporting › graphql server functions even when Apollo servers are down › with non-retryable error

    The family was unexpectedly 4.

      1959 |           fakeUsageReportingServer.address() as AddressInfo;
      1960 |         if (family !== 'IPv4') {
    > 1961 |           throw new Error(`The family was unexpectedly ${family}.`);
           |                 ^
      1962 |         }
      1963 |
      1964 |         const fakeUsageReportingUrl = `http://${address}:${port}`;

      at makeFakeUsageReportingServer (../apollo-server-integration-testsuite/src/ApolloServer.ts:1961:17)
      at testWithStatus (../apollo-server-integration-testsuite/src/ApolloServer.ts:1985:13)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:2078:11)

PASS packages/apollo-server-core/src/plugin/cacheControl/__tests__/cacheControlPlugin.test.ts
  plugin
    willSendResponse
      HTTP cache-control header
        ✓ is set when calculateHttpHeaders is set to true (39 ms)
        ✓ is not set when calculateHttpHeaders is set to false (4 ms)
        ✓ is not set if response has errors (5 ms)
        ✓ does not set cache-control header if there is no overall cache policy (3 ms)

PASS packages/apollo-server-core/src/plugin/schemaReporting/__tests__/schemaReporter.test.ts
  Schema reporter
    ✓ return correct values if no errors (46 ms)
    ✓ throws on 500 response (18 ms)
    ✓ throws on 200 malformed response (15 ms)
    ✓ sends schema if withCoreSchema is true. (17 ms)

PASS packages/apollo-server-core/src/__tests__/cachePolicy.test.ts
  newCachePolicy
    ✓ starts uncacheable (11 ms)
    ✓ restricting maxAge positive makes restricted
    ✓ restricting maxAge 0 makes restricted
    ✓ restricting scope to private makes restricted (1 ms)
    ✓ returns lowest max age value (1 ms)
    ✓ returns lowest max age value in other order (2 ms)
    ✓ maxAge 0 if any cache hint has a maxAge of 0 (1 ms)
    ✓ returns undefined if first cache hint has a maxAge of 0 (1 ms)
    ✓ only restricting maxAge keeps scope undefined
    ✓ returns PRIVATE scope if any cache hint has PRIVATE scope (4 ms)
    ✓ policyIfCacheable (5 ms)
    ✓ replace (1 ms)

PASS packages/apollo-server-core/src/__tests__/documentStore.test.ts
  ApolloServerBase documentStore
    ✓ documentStore - undefined (311 ms)
    ✓ documentStore - custom (43 ms)
    ✓ documentStore - null (29 ms)
    ✓ documentStore with changing schema

PASS packages/apollo-server-core/src/__tests__/dataSources.test.ts
  ApolloServerBase dataSources
    ✓ initializes synchronous datasources from a datasource creator function (307 ms)
    ✓ initializes all async and sync datasources before calling resolvers (32 ms)
    ✓ makes datasources available on resolver contexts (39 ms)

PASS packages/apollo-server-errors/src/__tests__/ApolloError.test.ts
  ApolloError
    ✓ doesn't overwrite extensions when provided in the constructor (10 ms)
    ✓ a code property doesn't overwrite the code provided to the constructor (2 ms)
    ✓ a message property doesn't overwrite the message provided to the constructor (1 ms)
    ✓ throws for users who use an extensions key in the third constructor argument (85 ms)
    ✓ provides toJSON method (3 ms)
    ✓ provides toString method (24 ms)
  ForbiddenError
    ✓ supports arbitrary data being passed (4 ms)
  AuthenticationError
    ✓ supports arbitrary data being passed (9 ms)

PASS packages/apollo-server-core/src/plugin/schemaReporting/__tests__/index.test.ts
  end-to-end
    ✓ fails for unparsable overrideReportedSchema (19 ms)
    ✓ fails for invalid overrideReportedSchema (11 ms)

PASS packages/apollo-server-core/src/__tests__/logger.test.ts
  logger
    ✓ uses internal loglevel logger by default (204 ms)
    ✓ uses custom logger when configured (31 ms)

PASS packages/apollo-server-core/src/plugin/schemaReporting/__tests__/computeCoreSchemaHash.test.ts
  Executable Schema Id
    ✓ does not normalize GraphQL schemas (33 ms)
    ✓ does not normalize strings (2 ms)

PASS packages/apollo-server-fastify/src/__tests__/datasource.test.ts (13.357 s)
  apollo-server-fastify
    ✓ uses the cache (462 ms)
    ✓ can cache a string from the backend (1087 ms)

PASS packages/apollo-server-cache-redis/src/__tests__/BaseRedisCache.test.ts (15.387 s)
  BaseRedisCache
    ✓ run apollo-server-caching test suite (63 ms)

PASS packages/apollo-server-cloud-functions/src/__tests__/googleCloudApollo.test.ts (35.62 s)
  googleCloudApollo
    ✓ handles requests with path set to null (594 ms)
  integration:CloudFunction
    apolloServer
      ✓ calls serverWillStart before serving a request (28 ms)
      graphqlHTTP
        ✓ rejects the request if the method is not POST or GET (259 ms)
        ✓ throws an error if POST body is empty (180 ms)
        ✓ throws an error if POST body is missing even with content-type (292 ms)
        ✓ throws an error if invalid content-type (175 ms)
        ✓ throws an error if POST operation is missing (92 ms)
        ✓ throws an error if POST operation is empty (547 ms)
        ✓ throws an error if POST JSON is malformed (143 ms)
        ✓ throws an error if GET query is missing (36 ms)
        ✓ can handle a basic GET request (149 ms)
        ✓ can handle a basic implicit GET request (44 ms)
        ✓ throws error if trying to use mutation using GET request (246 ms)
        ✓ throws error if trying to use mutation with fragment using GET request (247 ms)
        ✓ can handle a GET request with variables (157 ms)
        ✓ can handle a basic request (84 ms)
        ✓ cache-control not set without any hints (48 ms)
        ✓ cache-control set with dynamic hint (84 ms)
        ✓ cache-control set with defaultMaxAge (113 ms)
        ✓ returns PersistedQueryNotSupported to a GET request if PQs disabled (113 ms)
        ✓ returns PersistedQueryNotSupported to a POST request if PQs disabled (34 ms)
        ✓ returns PersistedQueryNotFound to a GET request (45 ms)
        ✓ returns PersistedQueryNotFound to a POST request (77 ms)
        ✓ can handle a request with variables (69 ms)
        ✓ can handle a request with variables as string (116 ms)
        ✓ can handle a request with variables as an invalid string (96 ms)
        ✓ can handle a request with operationName (76 ms)
        ✓ can handle introspection request (201 ms)
        ✓ does not accept a query AST (75 ms)
        ✓ can handle batch requests (43 ms)
        ✓ can handle batch requests (76 ms)
        ✓ can handle batch requests in parallel (454 ms)
        ✓ disables batch requests when allowBatchedHttpRequests is false (232 ms)
        ✓ clones batch context (81 ms)
        ✓ executes batch context if it is a function (177 ms)
        ✓ can handle a request with a mutation (58 ms)
        ✓ applies the formatResponse function (63 ms)
        ✓ passes the context to the resolver (38 ms)
        ✓ passes the rootValue to the resolver (97 ms)
        ✓ passes the rootValue function result to the resolver (34 ms)
        ✓ returns errors (379 ms)
        ✓ applies formatError if provided (190 ms)
        ✓ formatError receives error that passes instanceof checks (254 ms)
        ✓ allows for custom error formatting to sanitize (78 ms)
        ✓ allows for custom error formatting to elaborate (25 ms)
        ✓ sends internal server error when formatError fails (68 ms)
        ✓ applies additional validationRules (144 ms)
        cors enabled by default
          ✓ for POST request (56 ms)
          ✓ for OPTIONS preflight request (44 ms)
      status code
        ✓ allows setting a custom status code (21 ms)
      Persisted Queries
        ✓ when ttlSeconds is set, passes ttl to the apq cache set call (44 ms)
        ✓ when ttlSeconds is unset, ttl is not passed to apq cache (60 ms)
        ✓ errors when version is not specified (173 ms)
        ✓ errors when version is unsupported (32 ms)
        ✓ errors when hash is mismatched (306 ms)
        ✓ returns PersistedQueryNotFound on the first try (83 ms)
        ✓ returns result on the second try (56 ms)
        ✓ returns with batched persisted queries (313 ms)
        ✓ returns result on the persisted query (1031 ms)
        ✓ returns error when hash does not match (1751 ms)
        ✓ returns correct result using get request (2610 ms)

PASS packages/apollo-server-fastify/src/__tests__/fastifyApollo.test.ts (38.96 s)
  fastifyApollo
    ✓ throws error if called without schema (334 ms)
  integration:Fastify
    apolloServer
      graphqlHTTP
        ✓ rejects the request if the method is not POST or GET (2450 ms)
        ✓ throws an error if POST body is empty (1177 ms)
        ✓ throws an error if POST body is missing even with content-type (1073 ms)
        ✓ throws an error if invalid content-type (339 ms)
        ✓ throws an error if POST operation is missing (151 ms)
        ✓ throws an error if POST operation is empty (249 ms)
        ✓ throws an error if POST JSON is malformed (274 ms)
        ✓ throws an error if GET query is missing (145 ms)
        ✓ can handle a basic GET request (148 ms)
        ✓ can handle a basic implicit GET request (135 ms)
        ✓ throws error if trying to use mutation using GET request (351 ms)
        ✓ throws error if trying to use mutation with fragment using GET request (293 ms)
        ✓ can handle a GET request with variables (227 ms)
        ✓ can handle a basic request (191 ms)
        ✓ cache-control not set without any hints (159 ms)
        ✓ cache-control set with dynamic hint (199 ms)
        ✓ cache-control set with defaultMaxAge (181 ms)
        ✓ returns PersistedQueryNotSupported to a GET request if PQs disabled (157 ms)
        ✓ returns PersistedQueryNotSupported to a POST request if PQs disabled (192 ms)
        ✓ returns PersistedQueryNotFound to a GET request (298 ms)
        ✓ returns PersistedQueryNotFound to a POST request (206 ms)
        ✓ can handle a request with variables (186 ms)
        ✓ can handle a request with variables as string (139 ms)
        ✓ can handle a request with variables as an invalid string (68 ms)
        ✓ can handle a request with operationName (110 ms)
        ✓ can handle introspection request (230 ms)
        ✓ does not accept a query AST (136 ms)
        ✓ can handle batch requests (189 ms)
        ✓ can handle batch requests (167 ms)
        ✓ can handle batch requests in parallel (390 ms)
        ✓ disables batch requests when allowBatchedHttpRequests is false (207 ms)
        ✓ clones batch context (111 ms)
        ✓ executes batch context if it is a function (78 ms)
        ✓ can handle a request with a mutation (94 ms)
        ✓ applies the formatResponse function (196 ms)
        ✓ passes the context to the resolver (232 ms)
        ✓ passes the rootValue to the resolver (109 ms)
        ✓ passes the rootValue function result to the resolver (252 ms)
        ✓ returns errors (590 ms)
        ✓ applies formatError if provided (185 ms)
        ✓ formatError receives error that passes instanceof checks (230 ms)
        ✓ allows for custom error formatting to sanitize (254 ms)
        ✓ allows for custom error formatting to elaborate (122 ms)
        ✓ sends internal server error when formatError fails (65 ms)
        ✓ applies additional validationRules (246 ms)
        cors enabled by default
          ✓ for POST request (186 ms)
          ✓ for OPTIONS preflight request (127 ms)
      server setup
        ✓ throws error on 404 routes (127 ms)
      status code
        ✓ allows setting a custom status code (215 ms)
      Persisted Queries
        ✓ when ttlSeconds is set, passes ttl to the apq cache set call (135 ms)
        ✓ when ttlSeconds is unset, ttl is not passed to apq cache (388 ms)
        ✓ errors when version is not specified (744 ms)
        ✓ errors when version is unsupported (1384 ms)
        ✓ errors when hash is mismatched (1760 ms)
        ✓ returns PersistedQueryNotFound on the first try (3258 ms)
        ✓ returns result on the second try (1588 ms)
        ✓ returns with batched persisted queries (692 ms)
        ✓ returns result on the persisted query (359 ms)
        ✓ returns error when hash does not match (136 ms)
        ✓ returns correct result using get request (347 ms)

FAIL packages/apollo-server-koa/src/__tests__/koaApollo.test.ts (41.431 s)
  koaApollo
    ✓ throws error if called without schema (584 ms)
  integration:Koa
    apolloServer
      graphqlHTTP
        ✓ rejects the request if the method is not POST or GET (1703 ms)
        ✓ throws an error if POST body is empty (743 ms)
        ✓ throws an error if POST body is missing even with content-type (657 ms)
        ✓ throws an error if invalid content-type (296 ms)
        ✓ throws an error if POST operation is missing (237 ms)
        ✓ throws an error if POST operation is empty (1317 ms)
        ✓ throws an error if POST JSON is malformed (800 ms)
        ✓ throws an error if GET query is missing (202 ms)
        ✓ can handle a basic GET request (118 ms)
        ✓ can handle a basic implicit GET request (53 ms)
        ✓ throws error if trying to use mutation using GET request (188 ms)
        ✓ throws error if trying to use mutation with fragment using GET request (74 ms)
        ✓ can handle a GET request with variables (44 ms)
        ✓ can handle a basic request (118 ms)
        ✓ cache-control not set without any hints (53 ms)
        ✓ cache-control set with dynamic hint (32 ms)
        ✓ cache-control set with defaultMaxAge (109 ms)
        ✓ returns PersistedQueryNotSupported to a GET request if PQs disabled (164 ms)
        ✓ returns PersistedQueryNotSupported to a POST request if PQs disabled (414 ms)
        ✓ returns PersistedQueryNotFound to a GET request (1260 ms)
        ✓ returns PersistedQueryNotFound to a POST request (2458 ms)
        ✓ can handle a request with variables (76 ms)
        ✓ can handle a request with variables as string (95 ms)
        ✓ can handle a request with variables as an invalid string (49 ms)
        ✓ can handle a request with operationName (52 ms)
        ✓ can handle introspection request (130 ms)
        ✓ does not accept a query AST (99 ms)
        ✓ can handle batch requests (74 ms)
        ✓ can handle batch requests (37 ms)
        ✓ can handle batch requests in parallel (495 ms)
        ✓ disables batch requests when allowBatchedHttpRequests is false (88 ms)
        ✓ clones batch context (35 ms)
        ✓ executes batch context if it is a function (36 ms)
        ✓ can handle a request with a mutation (20 ms)
        ✓ applies the formatResponse function (28 ms)
        ✓ passes the context to the resolver (25 ms)
        ✓ passes the rootValue to the resolver (44 ms)
        ✓ passes the rootValue function result to the resolver (79 ms)
        ✓ returns errors (164 ms)
        ✓ applies formatError if provided (60 ms)
        ✓ formatError receives error that passes instanceof checks (49 ms)
        ✓ allows for custom error formatting to sanitize (31 ms)
        ✓ allows for custom error formatting to elaborate (33 ms)
        ✓ sends internal server error when formatError fails (43 ms)
        ✓ applies additional validationRules (71 ms)
        cors enabled by default
          ✕ for POST request (6220 ms)
          ✓ for OPTIONS preflight request (127 ms)
      server setup
        ✓ throws error on 404 routes (28 ms)
      status code
        ✓ allows setting a custom status code (22 ms)
      Persisted Queries
        ✓ when ttlSeconds is set, passes ttl to the apq cache set call (30 ms)
        ✓ when ttlSeconds is unset, ttl is not passed to apq cache (35 ms)
        ✓ errors when version is not specified (50 ms)
        ✓ errors when version is unsupported (29 ms)
        ✓ errors when hash is mismatched (35 ms)
        ✓ returns PersistedQueryNotFound on the first try (84 ms)
        ✓ returns result on the second try (81 ms)
        ✓ returns with batched persisted queries (32 ms)
        ✓ returns result on the persisted query (38 ms)
        ✓ returns error when hash does not match (20 ms)
        ✓ returns correct result using get request (28 ms)

  ● integration:Koa › apolloServer › graphqlHTTP › cors enabled by default › for POST request

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      653 |         describe('cors enabled by default', () => {
      654 |           const origin = 'https://my-origin.test/';
    > 655 |           it('for POST request', async () => {
          |           ^
      656 |             app = await createApp();
      657 |             const expected = {
      658 |               testString: 'it works',

      at ../apollo-server-integration-testsuite/src/index.ts:655:11
      at ../apollo-server-integration-testsuite/src/index.ts:653:9
      at ../apollo-server-integration-testsuite/src/index.ts:247:5
      at Object.<anonymous>.exports.default (../apollo-server-integration-testsuite/src/index.ts:229:3)

PASS packages/apollo-server-express/src/__tests__/expressApollo.test.ts (10.283 s)
  expressApollo
    ✓ throws error if called without schema (149 ms)
  integration:Express
    apolloServer
      graphqlHTTP
        ✓ rejects the request if the method is not POST or GET (189 ms)
        ✓ throws an error if POST body is empty (85 ms)
        ✓ throws an error if POST body is missing even with content-type (173 ms)
        ✓ throws an error if invalid content-type (104 ms)
        ✓ throws an error if POST operation is missing (74 ms)
        ✓ throws an error if POST operation is empty (118 ms)
        ✓ throws an error if POST JSON is malformed (78 ms)
        ✓ throws an error if GET query is missing (47 ms)
        ✓ can handle a basic GET request (142 ms)
        ✓ can handle a basic implicit GET request (29 ms)
        ✓ throws error if trying to use mutation using GET request (56 ms)
        ✓ throws error if trying to use mutation with fragment using GET request (160 ms)
        ✓ can handle a GET request with variables (170 ms)
        ✓ can handle a basic request (85 ms)
        ✓ cache-control not set without any hints (39 ms)
        ✓ cache-control set with dynamic hint (60 ms)
        ✓ cache-control set with defaultMaxAge (60 ms)
        ✓ returns PersistedQueryNotSupported to a GET request if PQs disabled (84 ms)
        ✓ returns PersistedQueryNotSupported to a POST request if PQs disabled (42 ms)
        ✓ returns PersistedQueryNotFound to a GET request (41 ms)
        ✓ returns PersistedQueryNotFound to a POST request (79 ms)
        ✓ can handle a request with variables (52 ms)
        ✓ can handle a request with variables as string (60 ms)
        ✓ can handle a request with variables as an invalid string (82 ms)
        ✓ can handle a request with operationName (72 ms)
        ✓ can handle introspection request (140 ms)
        ✓ does not accept a query AST (44 ms)
        ✓ can handle batch requests (45 ms)
        ✓ can handle batch requests (32 ms)
        ✓ can handle batch requests in parallel (388 ms)
        ✓ disables batch requests when allowBatchedHttpRequests is false (45 ms)
        ✓ clones batch context (64 ms)
        ✓ executes batch context if it is a function (57 ms)
        ✓ can handle a request with a mutation (44 ms)
        ✓ applies the formatResponse function (40 ms)
        ✓ passes the context to the resolver (36 ms)
        ✓ passes the rootValue to the resolver (64 ms)
        ✓ passes the rootValue function result to the resolver (81 ms)
        ✓ returns errors (253 ms)
        ✓ applies formatError if provided (42 ms)
        ✓ formatError receives error that passes instanceof checks (53 ms)
        ✓ allows for custom error formatting to sanitize (44 ms)
        ✓ allows for custom error formatting to elaborate (70 ms)
        ✓ sends internal server error when formatError fails (69 ms)
        ✓ applies additional validationRules (75 ms)
        cors enabled by default
          ✓ for POST request (50 ms)
          ✓ for OPTIONS preflight request (46 ms)
      server setup
        ✓ throws error on 404 routes (72 ms)
      status code
        ✓ allows setting a custom status code (84 ms)
      Persisted Queries
        ✓ when ttlSeconds is set, passes ttl to the apq cache set call (102 ms)
        ✓ when ttlSeconds is unset, ttl is not passed to apq cache (99 ms)
        ✓ errors when version is not specified (93 ms)
        ✓ errors when version is unsupported (36 ms)
        ✓ errors when hash is mismatched (61 ms)
        ✓ returns PersistedQueryNotFound on the first try (48 ms)
        ✓ returns result on the second try (36 ms)
        ✓ returns with batched persisted queries (54 ms)
        ✓ returns result on the persisted query (32 ms)
        ✓ returns error when hash does not match (18 ms)
        ✓ returns correct result using get request (43 ms)

PASS packages/apollo-server-lambda/src/__tests__/lambdaApollo.test.ts (37.422 s)
  integration:APIGateway:Lambda
    apolloServer
      ✓ calls serverWillStart before serving a request (28 ms)
      graphqlHTTP
        ✓ rejects the request if the method is not POST or GET (1269 ms)
        ✓ throws an error if POST body is empty (1075 ms)
        ✓ throws an error if POST body is missing even with content-type (1361 ms)
        ✓ throws an error if invalid content-type (1144 ms)
        ✓ throws an error if POST operation is missing (750 ms)
        ✓ throws an error if POST operation is empty (367 ms)
        ✓ throws an error if POST JSON is malformed (70 ms)
        ✓ throws an error if GET query is missing (73 ms)
        ✓ can handle a basic GET request (59 ms)
        ✓ can handle a basic implicit GET request (44 ms)
        ✓ throws error if trying to use mutation using GET request (85 ms)
        ✓ throws error if trying to use mutation with fragment using GET request (50 ms)
        ✓ can handle a GET request with variables (57 ms)
        ✓ can handle a basic request (45 ms)
        ✓ cache-control not set without any hints (31 ms)
        ✓ cache-control set with dynamic hint (45 ms)
        ✓ cache-control set with defaultMaxAge (64 ms)
        ✓ returns PersistedQueryNotSupported to a GET request if PQs disabled (63 ms)
        ✓ returns PersistedQueryNotSupported to a POST request if PQs disabled (24 ms)
        ✓ returns PersistedQueryNotFound to a GET request (64 ms)
        ✓ returns PersistedQueryNotFound to a POST request (76 ms)
        ✓ can handle a request with variables (31 ms)
        ✓ can handle a request with variables as string (37 ms)
        ✓ can handle a request with variables as an invalid string (85 ms)
        ✓ can handle a request with operationName (72 ms)
        ✓ can handle introspection request (181 ms)
        ✓ does not accept a query AST (61 ms)
        ✓ can handle batch requests (42 ms)
        ✓ can handle batch requests (85 ms)
        ✓ can handle batch requests in parallel (304 ms)
        ✓ disables batch requests when allowBatchedHttpRequests is false (60 ms)
        ✓ clones batch context (74 ms)
        ✓ executes batch context if it is a function (66 ms)
        ✓ can handle a request with a mutation (127 ms)
        ✓ applies the formatResponse function (30 ms)
        ✓ passes the context to the resolver (98 ms)
        ✓ passes the rootValue to the resolver (54 ms)
        ✓ passes the rootValue function result to the resolver (46 ms)
        ✓ returns errors (66 ms)
        ✓ applies formatError if provided (34 ms)
        ✓ formatError receives error that passes instanceof checks (27 ms)
        ✓ allows for custom error formatting to sanitize (68 ms)
        ✓ allows for custom error formatting to elaborate (61 ms)
        ✓ sends internal server error when formatError fails (31 ms)
        ✓ applies additional validationRules (26 ms)
        cors enabled by default
          ✓ for POST request (56 ms)
          ✓ for OPTIONS preflight request (35 ms)
      status code
        ✓ allows setting a custom status code (24 ms)
      Persisted Queries
        ✓ when ttlSeconds is set, passes ttl to the apq cache set call (28 ms)
        ✓ when ttlSeconds is unset, ttl is not passed to apq cache (24 ms)
        ✓ errors when version is not specified (66 ms)
        ✓ errors when version is unsupported (28 ms)
        ✓ errors when hash is mismatched (55 ms)
        ✓ returns PersistedQueryNotFound on the first try (73 ms)
        ✓ returns result on the second try (79 ms)
        ✓ returns with batched persisted queries (51 ms)
        ✓ returns result on the persisted query (91 ms)
        ✓ returns error when hash does not match (35 ms)
        ✓ returns correct result using get request (40 ms)
  integration:ALB:Lambda
    apolloServer
      ✓ calls serverWillStart before serving a request (26 ms)
      graphqlHTTP
        ✓ rejects the request if the method is not POST or GET (37 ms)
        ✓ throws an error if POST body is empty (33 ms)
        ✓ throws an error if POST body is missing even with content-type (21 ms)
        ✓ throws an error if invalid content-type (24 ms)
        ✓ throws an error if POST operation is missing (46 ms)
        ✓ throws an error if POST operation is empty (27 ms)
        ✓ throws an error if POST JSON is malformed (19 ms)
        ✓ throws an error if GET query is missing (27 ms)
        ✓ can handle a basic GET request (29 ms)
        ✓ can handle a basic implicit GET request (46 ms)
        ✓ throws error if trying to use mutation using GET request (66 ms)
        ✓ throws error if trying to use mutation with fragment using GET request (50 ms)
        ✓ can handle a GET request with variables (28 ms)
        ✓ can handle a basic request (33 ms)
        ✓ cache-control not set without any hints (52 ms)
        ✓ cache-control set with dynamic hint (90 ms)
        ✓ cache-control set with defaultMaxAge (49 ms)
        ✓ returns PersistedQueryNotSupported to a GET request if PQs disabled (32 ms)
        ✓ returns PersistedQueryNotSupported to a POST request if PQs disabled (39 ms)
        ✓ returns PersistedQueryNotFound to a GET request (36 ms)
        ✓ returns PersistedQueryNotFound to a POST request (52 ms)
        ✓ can handle a request with variables (51 ms)
        ✓ can handle a request with variables as string (34 ms)
        ✓ can handle a request with variables as an invalid string (67 ms)
        ✓ can handle a request with operationName (25 ms)
        ✓ can handle introspection request (61 ms)
        ✓ does not accept a query AST (38 ms)
        ✓ can handle batch requests (33 ms)
        ✓ can handle batch requests (20 ms)
        ✓ can handle batch requests in parallel (365 ms)
        ✓ disables batch requests when allowBatchedHttpRequests is false (86 ms)
        ✓ clones batch context (38 ms)
        ✓ executes batch context if it is a function (23 ms)
        ✓ can handle a request with a mutation (58 ms)
        ✓ applies the formatResponse function (52 ms)
        ✓ passes the context to the resolver (24 ms)
        ✓ passes the rootValue to the resolver (20 ms)
        ✓ passes the rootValue function result to the resolver (38 ms)
        ✓ returns errors (25 ms)
        ✓ applies formatError if provided (94 ms)
        ✓ formatError receives error that passes instanceof checks (73 ms)
        ✓ allows for custom error formatting to sanitize (28 ms)
        ✓ allows for custom error formatting to elaborate (31 ms)
        ✓ sends internal server error when formatError fails (25 ms)
        ✓ applies additional validationRules (27 ms)
        cors enabled by default
          ✓ for POST request (86 ms)
          ✓ for OPTIONS preflight request (68 ms)
      status code
        ✓ allows setting a custom status code (41 ms)
      Persisted Queries
        ✓ when ttlSeconds is set, passes ttl to the apq cache set call (35 ms)
        ✓ when ttlSeconds is unset, ttl is not passed to apq cache (40 ms)
        ✓ errors when version is not specified (38 ms)
        ✓ errors when version is unsupported (23 ms)
        ✓ errors when hash is mismatched (26 ms)
        ✓ returns PersistedQueryNotFound on the first try (41 ms)
        ✓ returns result on the second try (48 ms)
        ✓ returns with batched persisted queries (52 ms)
        ✓ returns result on the persisted query (65 ms)
        ✓ returns error when hash does not match (31 ms)
        ✓ returns correct result using get request (35 ms)

PASS packages/apollo-server-express/src/__tests__/connectApollo.test.ts (36.421 s)
  integration:Connect
    apolloServer
      graphqlHTTP
        ✓ rejects the request if the method is not POST or GET (1002 ms)
        ✓ throws an error if POST body is empty (883 ms)
        ✓ throws an error if POST body is missing even with content-type (2046 ms)
        ✓ throws an error if invalid content-type (699 ms)
        ✓ throws an error if POST operation is missing (1184 ms)
        ✓ throws an error if POST operation is empty (501 ms)
        ✓ throws an error if POST JSON is malformed (55 ms)
        ✓ throws an error if GET query is missing (25 ms)
        ✓ can handle a basic GET request (53 ms)
        ✓ can handle a basic implicit GET request (35 ms)
        ✓ throws error if trying to use mutation using GET request (85 ms)
        ✓ throws error if trying to use mutation with fragment using GET request (39 ms)
        ✓ can handle a GET request with variables (37 ms)
        ✓ can handle a basic request (43 ms)
        ✓ cache-control not set without any hints (29 ms)
        ✓ cache-control set with dynamic hint (30 ms)
        ✓ cache-control set with defaultMaxAge (54 ms)
        ✓ returns PersistedQueryNotSupported to a GET request if PQs disabled (22 ms)
        ✓ returns PersistedQueryNotSupported to a POST request if PQs disabled (25 ms)
        ✓ returns PersistedQueryNotFound to a GET request (36 ms)
        ✓ returns PersistedQueryNotFound to a POST request (29 ms)
        ✓ can handle a request with variables (30 ms)
        ✓ can handle a request with variables as string (28 ms)
        ✓ can handle a request with variables as an invalid string (32 ms)
        ✓ can handle a request with operationName (46 ms)
        ✓ can handle introspection request (112 ms)
        ✓ does not accept a query AST (72 ms)
        ✓ can handle batch requests (31 ms)
        ✓ can handle batch requests (34 ms)
        ✓ can handle batch requests in parallel (272 ms)
        ✓ disables batch requests when allowBatchedHttpRequests is false (31 ms)
        ✓ clones batch context (45 ms)
        ✓ executes batch context if it is a function (21 ms)
        ✓ can handle a request with a mutation (32 ms)
        ✓ applies the formatResponse function (47 ms)
        ✓ passes the context to the resolver (48 ms)
        ✓ passes the rootValue to the resolver (57 ms)
        ✓ passes the rootValue function result to the resolver (42 ms)
        ✓ returns errors (107 ms)
        ✓ applies formatError if provided (42 ms)
        ✓ formatError receives error that passes instanceof checks (58 ms)
        ✓ allows for custom error formatting to sanitize (34 ms)
        ✓ allows for custom error formatting to elaborate (24 ms)
        ✓ sends internal server error when formatError fails (19 ms)
        ✓ applies additional validationRules (24 ms)
        cors enabled by default
          ✓ for POST request (21 ms)
          ✓ for OPTIONS preflight request (51 ms)
      server setup
        ✓ throws error on 404 routes (20 ms)
      status code
        ✓ allows setting a custom status code (21 ms)
      Persisted Queries
        ✓ when ttlSeconds is set, passes ttl to the apq cache set call (24 ms)
        ✓ when ttlSeconds is unset, ttl is not passed to apq cache (20 ms)
        ✓ errors when version is not specified (60 ms)
        ✓ errors when version is unsupported (24 ms)
        ✓ errors when hash is mismatched (21 ms)
        ✓ returns PersistedQueryNotFound on the first try (42 ms)
        ✓ returns result on the second try (41 ms)
        ✓ returns with batched persisted queries (37 ms)
        ✓ returns result on the persisted query (34 ms)
        ✓ returns error when hash does not match (36 ms)
        ✓ returns correct result using get request (24 ms)

PASS packages/apollo-server-core/src/__tests__/rollupCommonJs.test.ts (7.461 s)
  @rollup/plugin-commonjs
    ✓ bundles into es6 without circular dependencies issues (6066 ms)

PASS packages/apollo-server-micro/src/__tests__/microApollo.test.ts (9.045 s)
  microApollo
    ✓ should throw an error if called without a schema (225 ms)
  integration:Micro
    apolloServer
      graphqlHTTP
        ✓ rejects the request if the method is not POST or GET (210 ms)
        ✓ throws an error if POST body is empty (58 ms)
        ✓ throws an error if POST body is missing even with content-type (209 ms)
        ✓ throws an error if invalid content-type (97 ms)
        ✓ throws an error if POST operation is missing (94 ms)
        ✓ throws an error if POST operation is empty (232 ms)
        ✓ throws an error if POST JSON is malformed (102 ms)
        ✓ throws an error if GET query is missing (33 ms)
        ✓ can handle a basic GET request (57 ms)
        ✓ can handle a basic implicit GET request (92 ms)
        ✓ throws error if trying to use mutation using GET request (113 ms)
        ✓ throws error if trying to use mutation with fragment using GET request (37 ms)
        ✓ can handle a GET request with variables (41 ms)
        ✓ can handle a basic request (27 ms)
        ✓ cache-control not set without any hints (32 ms)
        ✓ cache-control set with dynamic hint (31 ms)
        ✓ cache-control set with defaultMaxAge (66 ms)
        ✓ returns PersistedQueryNotSupported to a GET request if PQs disabled (25 ms)
        ✓ returns PersistedQueryNotSupported to a POST request if PQs disabled (24 ms)
        ✓ returns PersistedQueryNotFound to a GET request (44 ms)
        ✓ returns PersistedQueryNotFound to a POST request (63 ms)
        ✓ can handle a request with variables (25 ms)
        ✓ can handle a request with variables as string (44 ms)
        ✓ can handle a request with variables as an invalid string (30 ms)
        ✓ can handle a request with operationName (45 ms)
        ✓ can handle introspection request (67 ms)
        ✓ does not accept a query AST (39 ms)
        ✓ can handle batch requests (26 ms)
        ✓ can handle batch requests (42 ms)
        ✓ can handle batch requests in parallel (338 ms)
        ✓ disables batch requests when allowBatchedHttpRequests is false (28 ms)
        ✓ clones batch context (33 ms)
        ✓ executes batch context if it is a function (56 ms)
        ✓ can handle a request with a mutation (74 ms)
        ✓ applies the formatResponse function (61 ms)
        ✓ passes the context to the resolver (54 ms)
        ✓ passes the rootValue to the resolver (55 ms)
        ✓ passes the rootValue function result to the resolver (33 ms)
        ✓ returns errors (118 ms)
        ✓ applies formatError if provided (60 ms)
        ✓ formatError receives error that passes instanceof checks (53 ms)
        ✓ allows for custom error formatting to sanitize (78 ms)
        ✓ allows for custom error formatting to elaborate (41 ms)
        ✓ sends internal server error when formatError fails (30 ms)
        ✓ applies additional validationRules (46 ms)
      server setup
        ✓ throws error on 404 routes (39 ms)
      status code
        ✓ allows setting a custom status code (27 ms)
      Persisted Queries
        ✓ when ttlSeconds is set, passes ttl to the apq cache set call (38 ms)
        ✓ when ttlSeconds is unset, ttl is not passed to apq cache (30 ms)
        ✓ errors when version is not specified (27 ms)
        ✓ errors when version is unsupported (29 ms)
        ✓ errors when hash is mismatched (38 ms)
        ✓ returns PersistedQueryNotFound on the first try (43 ms)
        ✓ returns result on the second try (35 ms)
        ✓ returns with batched persisted queries (32 ms)
        ✓ returns result on the persisted query (84 ms)
        ✓ returns error when hash does not match (26 ms)
        ✓ returns correct result using get request (45 ms)

PASS packages/apollo-server-cache-memcached/src/__tests__/Memcached.test.ts
  Memcached
    ✓ run apollo-server-caching test suite (30 ms)

PASS packages/apollo-server-caching/src/__tests__/PrefixingKeyValueCache.test.ts
  PrefixingKeyValueCache
    ✓ prefixes (34 ms)

PASS packages/apollo-server-cache-redis/src/__tests__/RedisClusterCache.test.ts (5.106 s)
  Redis
    ✓ run apollo-server-caching test suite (26 ms)

PASS packages/apollo-server-hapi/src/__tests__/hapiApollo.test.ts (20.767 s)
  integration:Hapi
    apolloServer
      graphqlHTTP
        ✓ rejects the request if the method is not POST or GET (1320 ms)
        ✓ throws an error if POST body is empty (87 ms)
        ✓ throws an error if POST body is missing even with content-type (120 ms)
        ✓ throws an error if invalid content-type (120 ms)
        ✓ throws an error if POST operation is missing (97 ms)
        ✓ throws an error if POST operation is empty (342 ms)
        ✓ throws an error if POST JSON is malformed (175 ms)
        ✓ throws an error if GET query is missing (62 ms)
        ✓ can handle a basic GET request (130 ms)
        ✓ can handle a basic implicit GET request (151 ms)
        ✓ throws error if trying to use mutation using GET request (175 ms)
        ✓ throws error if trying to use mutation with fragment using GET request (174 ms)
        ✓ can handle a GET request with variables (278 ms)
        ✓ can handle a basic request (84 ms)
        ✓ cache-control not set without any hints (186 ms)
        ✓ cache-control set with dynamic hint (103 ms)
        ✓ cache-control set with defaultMaxAge (217 ms)
        ✓ returns PersistedQueryNotSupported to a GET request if PQs disabled (86 ms)
        ✓ returns PersistedQueryNotSupported to a POST request if PQs disabled (99 ms)
        ✓ returns PersistedQueryNotFound to a GET request (167 ms)
        ✓ returns PersistedQueryNotFound to a POST request (58 ms)
        ✓ can handle a request with variables (88 ms)
        ✓ can handle a request with variables as string (154 ms)
        ✓ can handle a request with variables as an invalid string (100 ms)
        ✓ can handle a request with operationName (203 ms)
        ✓ can handle introspection request (251 ms)
        ✓ does not accept a query AST (112 ms)
        ✓ can handle batch requests (72 ms)
        ✓ can handle batch requests (60 ms)
        ✓ can handle batch requests in parallel (431 ms)
        ✓ disables batch requests when allowBatchedHttpRequests is false (228 ms)
        ✓ clones batch context (136 ms)
        ✓ executes batch context if it is a function (97 ms)
        ✓ can handle a request with a mutation (74 ms)
        ✓ applies the formatResponse function (63 ms)
        ✓ passes the context to the resolver (84 ms)
        ✓ passes the rootValue to the resolver (142 ms)
        ✓ passes the rootValue function result to the resolver (97 ms)
        ✓ returns errors (194 ms)
        ✓ applies formatError if provided (84 ms)
        ✓ formatError receives error that passes instanceof checks (163 ms)
        ✓ allows for custom error formatting to sanitize (74 ms)
        ✓ allows for custom error formatting to elaborate (82 ms)
        ✓ sends internal server error when formatError fails (47 ms)
        ✓ applies additional validationRules (111 ms)
        cors enabled by default
          ✓ for POST request (72 ms)
          ✓ for OPTIONS preflight request (73 ms)
      server setup
        ✓ throws error on 404 routes (66 ms)
      status code
        ✓ allows setting a custom status code (88 ms)
      Persisted Queries
        ✓ when ttlSeconds is set, passes ttl to the apq cache set call (79 ms)
        ✓ when ttlSeconds is unset, ttl is not passed to apq cache (97 ms)
        ✓ errors when version is not specified (91 ms)
        ✓ errors when version is unsupported (62 ms)
        ✓ errors when hash is mismatched (58 ms)
        ✓ returns PersistedQueryNotFound on the first try (75 ms)
        ✓ returns result on the second try (158 ms)
        ✓ returns with batched persisted queries (131 ms)
        ✓ returns result on the persisted query (133 ms)
        ✓ returns error when hash does not match (76 ms)
        ✓ returns correct result using get request (175 ms)

PASS packages/apollo-server-caching/src/__tests__/InMemoryLRUCache.test.ts
  InMemoryLRUCache
    ✓ run apollo-server-caching test suite (27 ms)

PASS packages/apollo-server-cache-redis/src/__tests__/RedisCache.test.ts
  Redis
    ✓ run apollo-server-caching test suite (39 ms)

PASS packages/apollo-server-core/src/plugin/usageReporting/__tests__/operationDerivedDataCache.test.ts
  operation-derived data cache key
    ✓ generates without the operationName (25 ms)
    ✓ generates with the operationName (4 ms)

PASS packages/apollo-server-plugin-response-cache/src/__tests__/ApolloServerPluginResponseCache.test.ts (9.157 s)
  Response cache plugin
    ✓ will instantiate when not called with options (59 ms)

A worker process has failed to exit gracefully and has been force exited. This is likely caused by tests leaking due to improper teardown. Try running with --detectOpenHandles to find leaks. Active timers can also cause this, ensure that .unref() was called on them.
Summary of all failing tests
FAIL packages/apollo-server-koa/src/__tests__/ApolloServer.test.ts (15.836 s)
  ● apollo-server-koa › ApolloServer › lifecycle › for Apollo usage reporting › traces › cachePolicy

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1063:19)

  ● apollo-server-koa › ApolloServer › lifecycle › for Apollo usage reporting › traces › does not expose stack

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1090:19)

  ● apollo-server-koa › ApolloServer › lifecycle › for Apollo usage reporting › traces › sets the trace key to operationName when it is defined

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1123:19)

  ● apollo-server-koa › ApolloServer › lifecycle › for Apollo usage reporting › traces › sets the trace key to unknown operation for missing operation

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1142:19)

  ● apollo-server-koa › ApolloServer › lifecycle › for Apollo usage reporting › traces › sets the trace key to parse failure when non-parsable gql

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1158:19)

  ● apollo-server-koa › ApolloServer › lifecycle › for Apollo usage reporting › traces › sets the trace key to validation failure when invalid operation

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1173:19)

  ● apollo-server-koa › ApolloServer › lifecycle › for Apollo usage reporting › traces › sets the trace key to "-" when operationName is undefined

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1188:19)

  ● apollo-server-koa › ApolloServer › lifecycle › for Apollo usage reporting › traces › doesn't resort to query body signature on `didResolveOperation` error

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1205:19)

  ● apollo-server-koa › ApolloServer › lifecycle › for Apollo usage reporting › traces › doesn't internal server error on an APQ

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1234:19)

  ● apollo-server-koa › ApolloServer › lifecycle › for Apollo usage reporting › traces › error munging › rewriteError › new error

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1278:23)

  ● apollo-server-koa › ApolloServer › lifecycle › for Apollo usage reporting › traces › error munging › rewriteError › modified error

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1321:23)

  ● apollo-server-koa › ApolloServer › lifecycle › for Apollo usage reporting › traces › error munging › rewriteError › nulled error

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1366:23)

  ● apollo-server-koa › ApolloServer › lifecycle › for Apollo usage reporting › traces › error munging › undefined error

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1403:21)

  ● apollo-server-koa › ApolloServer › usage reporting › graphql server functions even when Apollo servers are down › with retryable error

    The family was unexpectedly 4.

      1959 |           fakeUsageReportingServer.address() as AddressInfo;
      1960 |         if (family !== 'IPv4') {
    > 1961 |           throw new Error(`The family was unexpectedly ${family}.`);
           |                 ^
      1962 |         }
      1963 |
      1964 |         const fakeUsageReportingUrl = `http://${address}:${port}`;

      at makeFakeUsageReportingServer (../apollo-server-integration-testsuite/src/ApolloServer.ts:1961:17)
      at testWithStatus (../apollo-server-integration-testsuite/src/ApolloServer.ts:1985:13)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:2072:11)

  ● apollo-server-koa › ApolloServer › usage reporting › graphql server functions even when Apollo servers are down › with network error

    The family was unexpectedly 4.

      1959 |           fakeUsageReportingServer.address() as AddressInfo;
      1960 |         if (family !== 'IPv4') {
    > 1961 |           throw new Error(`The family was unexpectedly ${family}.`);
           |                 ^
      1962 |         }
      1963 |
      1964 |         const fakeUsageReportingUrl = `http://${address}:${port}`;

      at makeFakeUsageReportingServer (../apollo-server-integration-testsuite/src/ApolloServer.ts:1961:17)
      at testWithStatus (../apollo-server-integration-testsuite/src/ApolloServer.ts:1985:13)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:2075:11)

  ● apollo-server-koa › ApolloServer › usage reporting › graphql server functions even when Apollo servers are down › with non-retryable error

    The family was unexpectedly 4.

      1959 |           fakeUsageReportingServer.address() as AddressInfo;
      1960 |         if (family !== 'IPv4') {
    > 1961 |           throw new Error(`The family was unexpectedly ${family}.`);
           |                 ^
      1962 |         }
      1963 |
      1964 |         const fakeUsageReportingUrl = `http://${address}:${port}`;

      at makeFakeUsageReportingServer (../apollo-server-integration-testsuite/src/ApolloServer.ts:1961:17)
      at testWithStatus (../apollo-server-integration-testsuite/src/ApolloServer.ts:1985:13)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:2078:11)

FAIL packages/apollo-server-express/src/__tests__/ApolloServer.test.ts (17.537 s)
  ● apollo-server-express › ApolloServer › lifecycle › for Apollo usage reporting › traces › cachePolicy

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1063:19)

  ● apollo-server-express › ApolloServer › lifecycle › for Apollo usage reporting › traces › does not expose stack

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1090:19)

  ● apollo-server-express › ApolloServer › lifecycle › for Apollo usage reporting › traces › sets the trace key to operationName when it is defined

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1123:19)

  ● apollo-server-express › ApolloServer › lifecycle › for Apollo usage reporting › traces › sets the trace key to unknown operation for missing operation

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1142:19)

  ● apollo-server-express › ApolloServer › lifecycle › for Apollo usage reporting › traces › sets the trace key to parse failure when non-parsable gql

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1158:19)

  ● apollo-server-express › ApolloServer › lifecycle › for Apollo usage reporting › traces › sets the trace key to validation failure when invalid operation

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1173:19)

  ● apollo-server-express › ApolloServer › lifecycle › for Apollo usage reporting › traces › sets the trace key to "-" when operationName is undefined

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1188:19)

  ● apollo-server-express › ApolloServer › lifecycle › for Apollo usage reporting › traces › doesn't resort to query body signature on `didResolveOperation` error

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1205:19)

  ● apollo-server-express › ApolloServer › lifecycle › for Apollo usage reporting › traces › doesn't internal server error on an APQ

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1234:19)

  ● apollo-server-express › ApolloServer › lifecycle › for Apollo usage reporting › traces › error munging › rewriteError › new error

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1278:23)

  ● apollo-server-express › ApolloServer › lifecycle › for Apollo usage reporting › traces › error munging › rewriteError › modified error

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1321:23)

  ● apollo-server-express › ApolloServer › lifecycle › for Apollo usage reporting › traces › error munging › rewriteError › nulled error

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1366:23)

  ● apollo-server-express › ApolloServer › lifecycle › for Apollo usage reporting › traces › error munging › undefined error

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1403:21)

  ● apollo-server-express › ApolloServer › usage reporting › graphql server functions even when Apollo servers are down › with retryable error

    The family was unexpectedly 4.

      1959 |           fakeUsageReportingServer.address() as AddressInfo;
      1960 |         if (family !== 'IPv4') {
    > 1961 |           throw new Error(`The family was unexpectedly ${family}.`);
           |                 ^
      1962 |         }
      1963 |
      1964 |         const fakeUsageReportingUrl = `http://${address}:${port}`;

      at makeFakeUsageReportingServer (../apollo-server-integration-testsuite/src/ApolloServer.ts:1961:17)
      at testWithStatus (../apollo-server-integration-testsuite/src/ApolloServer.ts:1985:13)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:2072:11)

  ● apollo-server-express › ApolloServer › usage reporting › graphql server functions even when Apollo servers are down › with network error

    The family was unexpectedly 4.

      1959 |           fakeUsageReportingServer.address() as AddressInfo;
      1960 |         if (family !== 'IPv4') {
    > 1961 |           throw new Error(`The family was unexpectedly ${family}.`);
           |                 ^
      1962 |         }
      1963 |
      1964 |         const fakeUsageReportingUrl = `http://${address}:${port}`;

      at makeFakeUsageReportingServer (../apollo-server-integration-testsuite/src/ApolloServer.ts:1961:17)
      at testWithStatus (../apollo-server-integration-testsuite/src/ApolloServer.ts:1985:13)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:2075:11)

  ● apollo-server-express › ApolloServer › usage reporting › graphql server functions even when Apollo servers are down › with non-retryable error

    The family was unexpectedly 4.

      1959 |           fakeUsageReportingServer.address() as AddressInfo;
      1960 |         if (family !== 'IPv4') {
    > 1961 |           throw new Error(`The family was unexpectedly ${family}.`);
           |                 ^
      1962 |         }
      1963 |
      1964 |         const fakeUsageReportingUrl = `http://${address}:${port}`;

      at makeFakeUsageReportingServer (../apollo-server-integration-testsuite/src/ApolloServer.ts:1961:17)
      at testWithStatus (../apollo-server-integration-testsuite/src/ApolloServer.ts:1985:13)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:2078:11)

FAIL packages/apollo-server-fastify/src/__tests__/ApolloServer.test.ts (23.218 s)
  ● apollo-server-fastify › ApolloServer › lifecycle › for Apollo usage reporting › traces › cachePolicy

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1063:19)

  ● apollo-server-fastify › ApolloServer › lifecycle › for Apollo usage reporting › traces › does not expose stack

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1090:19)

  ● apollo-server-fastify › ApolloServer › lifecycle › for Apollo usage reporting › traces › sets the trace key to operationName when it is defined

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1123:19)

  ● apollo-server-fastify › ApolloServer › lifecycle › for Apollo usage reporting › traces › sets the trace key to unknown operation for missing operation

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1142:19)

  ● apollo-server-fastify › ApolloServer › lifecycle › for Apollo usage reporting › traces › sets the trace key to parse failure when non-parsable gql

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1158:19)

  ● apollo-server-fastify › ApolloServer › lifecycle › for Apollo usage reporting › traces › sets the trace key to validation failure when invalid operation

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1173:19)

  ● apollo-server-fastify › ApolloServer › lifecycle › for Apollo usage reporting › traces › sets the trace key to "-" when operationName is undefined

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1188:19)

  ● apollo-server-fastify › ApolloServer › lifecycle › for Apollo usage reporting › traces › doesn't resort to query body signature on `didResolveOperation` error

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1205:19)

  ● apollo-server-fastify › ApolloServer › lifecycle › for Apollo usage reporting › traces › doesn't internal server error on an APQ

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1234:19)

  ● apollo-server-fastify › ApolloServer › lifecycle › for Apollo usage reporting › traces › error munging › rewriteError › new error

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1278:23)

  ● apollo-server-fastify › ApolloServer › lifecycle › for Apollo usage reporting › traces › error munging › rewriteError › modified error

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1321:23)

  ● apollo-server-fastify › ApolloServer › lifecycle › for Apollo usage reporting › traces › error munging › rewriteError › nulled error

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1366:23)

  ● apollo-server-fastify › ApolloServer › lifecycle › for Apollo usage reporting › traces › error munging › undefined error

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1403:21)

  ● apollo-server-fastify › ApolloServer › usage reporting › graphql server functions even when Apollo servers are down › with retryable error

    The family was unexpectedly 4.

      1959 |           fakeUsageReportingServer.address() as AddressInfo;
      1960 |         if (family !== 'IPv4') {
    > 1961 |           throw new Error(`The family was unexpectedly ${family}.`);
           |                 ^
      1962 |         }
      1963 |
      1964 |         const fakeUsageReportingUrl = `http://${address}:${port}`;

      at makeFakeUsageReportingServer (../apollo-server-integration-testsuite/src/ApolloServer.ts:1961:17)
      at testWithStatus (../apollo-server-integration-testsuite/src/ApolloServer.ts:1985:13)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:2072:11)

  ● apollo-server-fastify › ApolloServer › usage reporting › graphql server functions even when Apollo servers are down › with network error

    The family was unexpectedly 4.

      1959 |           fakeUsageReportingServer.address() as AddressInfo;
      1960 |         if (family !== 'IPv4') {
    > 1961 |           throw new Error(`The family was unexpectedly ${family}.`);
           |                 ^
      1962 |         }
      1963 |
      1964 |         const fakeUsageReportingUrl = `http://${address}:${port}`;

      at makeFakeUsageReportingServer (../apollo-server-integration-testsuite/src/ApolloServer.ts:1961:17)
      at testWithStatus (../apollo-server-integration-testsuite/src/ApolloServer.ts:1985:13)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:2075:11)

  ● apollo-server-fastify › ApolloServer › usage reporting › graphql server functions even when Apollo servers are down › with non-retryable error

    The family was unexpectedly 4.

      1959 |           fakeUsageReportingServer.address() as AddressInfo;
      1960 |         if (family !== 'IPv4') {
    > 1961 |           throw new Error(`The family was unexpectedly ${family}.`);
           |                 ^
      1962 |         }
      1963 |
      1964 |         const fakeUsageReportingUrl = `http://${address}:${port}`;

      at makeFakeUsageReportingServer (../apollo-server-integration-testsuite/src/ApolloServer.ts:1961:17)
      at testWithStatus (../apollo-server-integration-testsuite/src/ApolloServer.ts:1985:13)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:2078:11)

FAIL packages/apollo-server-hapi/src/__tests__/ApolloServer.test.ts (17.404 s)
  ● apollo-server-hapi › ApolloServer › lifecycle › for Apollo usage reporting › traces › cachePolicy

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1063:19)

  ● apollo-server-hapi › ApolloServer › lifecycle › for Apollo usage reporting › traces › does not expose stack

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1090:19)

  ● apollo-server-hapi › ApolloServer › lifecycle › for Apollo usage reporting › traces › sets the trace key to operationName when it is defined

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1123:19)

  ● apollo-server-hapi › ApolloServer › lifecycle › for Apollo usage reporting › traces › sets the trace key to unknown operation for missing operation

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1142:19)

  ● apollo-server-hapi › ApolloServer › lifecycle › for Apollo usage reporting › traces › sets the trace key to parse failure when non-parsable gql

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1158:19)

  ● apollo-server-hapi › ApolloServer › lifecycle › for Apollo usage reporting › traces › sets the trace key to validation failure when invalid operation

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1173:19)

  ● apollo-server-hapi › ApolloServer › lifecycle › for Apollo usage reporting › traces › sets the trace key to "-" when operationName is undefined

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1188:19)

  ● apollo-server-hapi › ApolloServer › lifecycle › for Apollo usage reporting › traces › doesn't resort to query body signature on `didResolveOperation` error

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1205:19)

  ● apollo-server-hapi › ApolloServer › lifecycle › for Apollo usage reporting › traces › doesn't internal server error on an APQ

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1234:19)

  ● apollo-server-hapi › ApolloServer › lifecycle › for Apollo usage reporting › traces › error munging › rewriteError › new error

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1278:23)

  ● apollo-server-hapi › ApolloServer › lifecycle › for Apollo usage reporting › traces › error munging › rewriteError › modified error

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1321:23)

  ● apollo-server-hapi › ApolloServer › lifecycle › for Apollo usage reporting › traces › error munging › rewriteError › nulled error

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1366:23)

  ● apollo-server-hapi › ApolloServer › lifecycle › for Apollo usage reporting › traces › error munging › undefined error

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1403:21)

  ● apollo-server-hapi › ApolloServer › usage reporting › graphql server functions even when Apollo servers are down › with retryable error

    The family was unexpectedly 4.

      1959 |           fakeUsageReportingServer.address() as AddressInfo;
      1960 |         if (family !== 'IPv4') {
    > 1961 |           throw new Error(`The family was unexpectedly ${family}.`);
           |                 ^
      1962 |         }
      1963 |
      1964 |         const fakeUsageReportingUrl = `http://${address}:${port}`;

      at makeFakeUsageReportingServer (../apollo-server-integration-testsuite/src/ApolloServer.ts:1961:17)
      at testWithStatus (../apollo-server-integration-testsuite/src/ApolloServer.ts:1985:13)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:2072:11)

  ● apollo-server-hapi › ApolloServer › usage reporting › graphql server functions even when Apollo servers are down › with network error

    The family was unexpectedly 4.

      1959 |           fakeUsageReportingServer.address() as AddressInfo;
      1960 |         if (family !== 'IPv4') {
    > 1961 |           throw new Error(`The family was unexpectedly ${family}.`);
           |                 ^
      1962 |         }
      1963 |
      1964 |         const fakeUsageReportingUrl = `http://${address}:${port}`;

      at makeFakeUsageReportingServer (../apollo-server-integration-testsuite/src/ApolloServer.ts:1961:17)
      at testWithStatus (../apollo-server-integration-testsuite/src/ApolloServer.ts:1985:13)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:2075:11)

  ● apollo-server-hapi › ApolloServer › usage reporting › graphql server functions even when Apollo servers are down › with non-retryable error

    The family was unexpectedly 4.

      1959 |           fakeUsageReportingServer.address() as AddressInfo;
      1960 |         if (family !== 'IPv4') {
    > 1961 |           throw new Error(`The family was unexpectedly ${family}.`);
           |                 ^
      1962 |         }
      1963 |
      1964 |         const fakeUsageReportingUrl = `http://${address}:${port}`;

      at makeFakeUsageReportingServer (../apollo-server-integration-testsuite/src/ApolloServer.ts:1961:17)
      at testWithStatus (../apollo-server-integration-testsuite/src/ApolloServer.ts:1985:13)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:2078:11)

FAIL packages/apollo-server-lambda/src/__tests__/ApolloServer.test.ts (15.432 s)
  ● apollo-server-lambda › ApolloServer › lifecycle › for Apollo usage reporting › traces › cachePolicy

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1063:19)

  ● apollo-server-lambda › ApolloServer › lifecycle › for Apollo usage reporting › traces › does not expose stack

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1090:19)

  ● apollo-server-lambda › ApolloServer › lifecycle › for Apollo usage reporting › traces › sets the trace key to operationName when it is defined

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1123:19)

  ● apollo-server-lambda › ApolloServer › lifecycle › for Apollo usage reporting › traces › sets the trace key to unknown operation for missing operation

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1142:19)

  ● apollo-server-lambda › ApolloServer › lifecycle › for Apollo usage reporting › traces › sets the trace key to parse failure when non-parsable gql

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1158:19)

  ● apollo-server-lambda › ApolloServer › lifecycle › for Apollo usage reporting › traces › sets the trace key to validation failure when invalid operation

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1173:19)

  ● apollo-server-lambda › ApolloServer › lifecycle › for Apollo usage reporting › traces › sets the trace key to "-" when operationName is undefined

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1188:19)

  ● apollo-server-lambda › ApolloServer › lifecycle › for Apollo usage reporting › traces › doesn't resort to query body signature on `didResolveOperation` error

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1205:19)

  ● apollo-server-lambda › ApolloServer › lifecycle › for Apollo usage reporting › traces › doesn't internal server error on an APQ

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1234:19)

  ● apollo-server-lambda › ApolloServer › lifecycle › for Apollo usage reporting › traces › error munging › rewriteError › new error

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1278:23)

  ● apollo-server-lambda › ApolloServer › lifecycle › for Apollo usage reporting › traces › error munging › rewriteError › modified error

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1321:23)

  ● apollo-server-lambda › ApolloServer › lifecycle › for Apollo usage reporting › traces › error munging › rewriteError › nulled error

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1366:23)

  ● apollo-server-lambda › ApolloServer › lifecycle › for Apollo usage reporting › traces › error munging › undefined error

    The family was unexpectedly 4.

      983 |
      984 |             if (family !== 'IPv4') {
    > 985 |               throw new Error(`The family was unexpectedly ${family}.`);
          |                     ^
      986 |             }
      987 |             return new URL(`http://${address}:${port}`).toString();
      988 |           }

      at MockReportIngress.getUrl (../apollo-server-integration-testsuite/src/ApolloServer.ts:985:21)
      at setupApolloServerAndFetchPair (../apollo-server-integration-testsuite/src/ApolloServer.ts:1046:46)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:1403:21)

  ● apollo-server-lambda › ApolloServer › usage reporting › graphql server functions even when Apollo servers are down › with retryable error

    The family was unexpectedly 4.

      1959 |           fakeUsageReportingServer.address() as AddressInfo;
      1960 |         if (family !== 'IPv4') {
    > 1961 |           throw new Error(`The family was unexpectedly ${family}.`);
           |                 ^
      1962 |         }
      1963 |
      1964 |         const fakeUsageReportingUrl = `http://${address}:${port}`;

      at makeFakeUsageReportingServer (../apollo-server-integration-testsuite/src/ApolloServer.ts:1961:17)
      at testWithStatus (../apollo-server-integration-testsuite/src/ApolloServer.ts:1985:13)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:2072:11)

  ● apollo-server-lambda › ApolloServer › usage reporting › graphql server functions even when Apollo servers are down › with network error

    The family was unexpectedly 4.

      1959 |           fakeUsageReportingServer.address() as AddressInfo;
      1960 |         if (family !== 'IPv4') {
    > 1961 |           throw new Error(`The family was unexpectedly ${family}.`);
           |                 ^
      1962 |         }
      1963 |
      1964 |         const fakeUsageReportingUrl = `http://${address}:${port}`;

      at makeFakeUsageReportingServer (../apollo-server-integration-testsuite/src/ApolloServer.ts:1961:17)
      at testWithStatus (../apollo-server-integration-testsuite/src/ApolloServer.ts:1985:13)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:2075:11)

  ● apollo-server-lambda › ApolloServer › usage reporting › graphql server functions even when Apollo servers are down › with non-retryable error

    The family was unexpectedly 4.

      1959 |           fakeUsageReportingServer.address() as AddressInfo;
      1960 |         if (family !== 'IPv4') {
    > 1961 |           throw new Error(`The family was unexpectedly ${family}.`);
           |                 ^
      1962 |         }
      1963 |
      1964 |         const fakeUsageReportingUrl = `http://${address}:${port}`;

      at makeFakeUsageReportingServer (../apollo-server-integration-testsuite/src/ApolloServer.ts:1961:17)
      at testWithStatus (../apollo-server-integration-testsuite/src/ApolloServer.ts:1985:13)
      at Object.<anonymous> (../apollo-server-integration-testsuite/src/ApolloServer.ts:2078:11)

FAIL packages/apollo-server-koa/src/__tests__/koaApollo.test.ts (41.431 s)
  ● integration:Koa › apolloServer › graphqlHTTP › cors enabled by default › for POST request

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      653 |         describe('cors enabled by default', () => {
      654 |           const origin = 'https://my-origin.test/';
    > 655 |           it('for POST request', async () => {
          |           ^
      656 |             app = await createApp();
      657 |             const expected = {
      658 |               testString: 'it works',

      at ../apollo-server-integration-testsuite/src/index.ts:655:11
      at ../apollo-server-integration-testsuite/src/index.ts:653:9
      at ../apollo-server-integration-testsuite/src/index.ts:247:5
      at Object.<anonymous>.exports.default (../apollo-server-integration-testsuite/src/index.ts:229:3)


Test Suites: 6 failed, 44 passed, 50 total
Tests:       81 failed, 1311 passed, 1392 total
Snapshots:   21 passed, 21 total
Time:        192.024 s
Ran all test suites in 16 projects.
npm notice 
npm notice New minor version of npm available! 8.11.0 -> 8.12.1
npm notice Changelog: <https://github.com/npm/cli/releases/tag/v8.12.1>
npm notice Run `npm install -g npm@8.12.1` to update!
npm notice 
[Pipeline] }
[Pipeline] // dir
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Deploy)
[Pipeline] echo
Deploying apollo-server
[Pipeline] sh
+ docker rm -f apollo-server-deploy
Error: No such container: apollo-server-deploy
[Pipeline] sh
+ docker run --name apollo-server-deploy --mount type=volume,src=output-volume,dst=/usr/local/myapp apollo-server bash -c cd /usr/local/myapp/apollo-server && npm run compile:clean

> compile:clean
> tsc --build tsconfig.build.json --clean

npm notice 
npm notice New minor version of npm available! 8.11.0 -> 8.12.1
npm notice Changelog: <https://github.com/npm/cli/releases/tag/v8.12.1>
npm notice Run `npm install -g npm@8.12.1` to update!
npm notice 
[Pipeline] sh
+ sleep 5
+ docker inspect apollo-server-deploy --format={{.State.ExitCode}}
+ exit 0
[Pipeline] sh
+ docker rm -f apollo-server-deploy
apollo-server-deploy
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Prepare publish)
[Pipeline] echo
Preparing publish
[Pipeline] sh
+ ls /var/jenkins_home/workspace/artifacts
apollo-server-monorepo-1.0.0.tgz
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Publish)
[Pipeline] node
Running on Jenkins in /var/jenkins_home/workspace/Projekt@2
[Pipeline] {
[Pipeline] checkout
The recommended git tool is: git
No credentials specified
 > git rev-parse --resolve-git-dir /var/jenkins_home/workspace/Projekt@2/.git # timeout=10
Fetching changes from the remote Git repository
 > git config remote.origin.url https://github.com/InzynieriaOprogramowaniaAGH/MDO2022_S # timeout=10
Fetching upstream changes from https://github.com/InzynieriaOprogramowaniaAGH/MDO2022_S
 > git --version # timeout=10
 > git --version # 'git version 2.30.2'
 > git fetch --tags --force --progress -- https://github.com/InzynieriaOprogramowaniaAGH/MDO2022_S +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git rev-parse refs/remotes/origin/BT403177^{commit} # timeout=10
Checking out Revision dfa45c6672ffc95dfa5142eb3a33c40c43f27ca5 (refs/remotes/origin/BT403177)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f dfa45c6672ffc95dfa5142eb3a33c40c43f27ca5 # timeout=10
Commit message: "BT403177"
[Pipeline] withEnv
[Pipeline] {
[Pipeline] isUnix
[Pipeline] withEnv
[Pipeline] {
[Pipeline] sh
+ docker inspect -f . node:alpine
.
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] withDockerContainer
Jenkins seems to be running inside container 9faccc53c7cc58d7865d70a98390602895d1aba3593eaaad5f7e38bab3a0fb50
but /var/jenkins_home/workspace/Projekt@2 could not be found among []
but /var/jenkins_home/workspace/Projekt@2@tmp could not be found among []
$ docker run -t -d -u 1000:1000 --rm --mount type=volume,src=output-volume,dst=/usr/local/myapp --mount type=bind,source=/var/jenkins_home/workspace/artifacts,dst=/usr/local/copy -u root:root -w /var/jenkins_home/workspace/Projekt@2 -v /var/jenkins_home/workspace/Projekt@2:/var/jenkins_home/workspace/Projekt@2:rw,z -v /var/jenkins_home/workspace/Projekt@2@tmp:/var/jenkins_home/workspace/Projekt@2@tmp:rw,z -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** node:alpine cat
$ docker top ba128caa0b61728cac42557aa8cfad003010ef1370d9b1426312465fa19b318f -eo pid,comm
[Pipeline] {
[Pipeline] sh
+ apk add git
fetch https://dl-cdn.alpinelinux.org/alpine/v3.16/main/x86_64/APKINDEX.tar.gz
fetch https://dl-cdn.alpinelinux.org/alpine/v3.16/community/x86_64/APKINDEX.tar.gz
(1/7) Installing ca-certificates (20211220-r0)
(2/7) Installing brotli-libs (1.0.9-r6)
(3/7) Installing nghttp2-libs (1.47.0-r0)
(4/7) Installing libcurl (7.83.1-r1)
(5/7) Installing expat (2.4.8-r0)
(6/7) Installing pcre2 (10.39-r0)
(7/7) Installing git (2.36.1-r0)
Executing busybox-1.35.0-r13.trigger
Executing ca-certificates-20211220-r0.trigger
OK: 21 MiB in 23 packages
[Pipeline] sh
+ git config --global user.email you@example.com
[Pipeline] sh
+ git config --global user.name 'Your Name'
[Pipeline] sh
+ rm -rf /usr/local/copy/apollo-server-monorepo-1.0.0.tgz
[Pipeline] sh
+ cd /usr/local/myapp/apollo-server
+ npm version --allow-same-version 1.0.0
v1.0.0
+ npm pack
npm notice 
npm notice package: apollo-server-monorepo@1.0.0
npm notice === Tarball Contents === 
npm notice 5.6kB   .circleci/config.yml                                                                 
npm notice 993B    .codesandbox/ci.json                                                                 
npm notice 168B    .editorconfig                                                                        
npm notice 992B    .envrc                                                                               
npm notice 1.4kB   .github/APOLLO_RELEASE_TEMPLATE.md                                                   
npm notice 286B    .github/CODEOWNERS                                                                   
npm notice 1.5kB   .github/ISSUE_TEMPLATE.md                                                            
npm notice 1.3kB   .github/ISSUE_TEMPLATE/bug.md                                                        
npm notice 539B    .github/ISSUE_TEMPLATE/config.yml                                                    
npm notice 1.6kB   .github/ISSUE_TEMPLATE/feature-request.md                                            
npm notice 2.5kB   .github/PULL_REQUEST_TEMPLATE.md                                                     
npm notice 326B    .github/workflows/docs-publish.yml                                                   
npm notice 4B      .nvmrc                                                                               
npm notice 108B    .prettierignore                                                                      
npm notice 53B     .prettierrc.json5                                                                    
npm notice 67B     .vscode/extensions.json                                                              
npm notice 339B    .vscode/settings.json                                                                
npm notice 765B    .vscode/tasks.json                                                                   
npm notice 150.9kB CHANGELOG.md                                                                         
npm notice 10.3kB  CONTRIBUTING.md                                                                      
npm notice 5.4kB   DEVELOPMENT.md                                                                       
npm notice 1.1kB   LICENSE                                                                              
npm notice 19.4kB  ROADMAP.md                                                                           
npm notice 47.2MB  apollo-server-monorepo-1.0.1.tgz                                                     
npm notice 439B    codecov.yml                                                                          
npm notice 301B    codegen.yml                                                                          
npm notice 1.7kB   cspell-dict.txt                                                                      
npm notice 1.1kB   cspell.yaml                                                                          
npm notice 319B    docs/README.md                                                                       
npm notice 280.5kB docs/sketch/APQs.sketch                                                              
npm notice 2.9kB   docs/source/_redirects                                                               
npm notice 28.8kB  docs/source/api/apollo-server.mdx                                                    
npm notice 84B     docs/source/api/graphql-subscriptions.md                                             
npm notice 3.9kB   docs/source/api/plugin/cache-control.md                                              
npm notice 3.2kB   docs/source/api/plugin/drain-http-server.mdx                                         
npm notice 4.0kB   docs/source/api/plugin/inline-trace.md                                               
npm notice 13.8kB  docs/source/api/plugin/landing-pages.md                                              
npm notice 4.0kB   docs/source/api/plugin/schema-reporting.md                                           
npm notice 19.0kB  docs/source/api/plugin/usage-reporting.md                                            
npm notice 2.6kB   docs/source/builtin-plugins.md                                                       
npm notice 2.9kB   docs/source/config.json                                                              
npm notice 15.0kB  docs/source/data/data-sources.mdx                                                    
npm notice 16.1kB  docs/source/data/errors.mdx                                                          
npm notice 7.4kB   docs/source/data/file-uploads.mdx                                                    
npm notice 16.2kB  docs/source/data/resolvers.mdx                                                       
npm notice 32.1kB  docs/source/data/subscriptions.mdx                                                   
npm notice 8.1kB   docs/source/deployment/azure-functions.mdx                                           
npm notice 5.8kB   docs/source/deployment/gcp-functions.mdx                                             
npm notice 5.8kB   docs/source/deployment/heroku.md                                                     
npm notice 8.2kB   docs/source/deployment/lambda.md                                                     
npm notice 8.5kB   docs/source/getting-started.mdx                                                      
npm notice 79.1kB  docs/source/images/as-landing-page-production.jpg                                    
npm notice 149.8kB docs/source/images/as-landing-page.jpg                                               
npm notice 70.8kB  docs/source/images/deployment/heroku/add-integration.png                             
npm notice 169.3kB docs/source/images/deployment/heroku/automatic-deployment.png                        
npm notice 33.3kB  docs/source/images/deployment/heroku/config-vars.jpg                                 
npm notice 46.5kB  docs/source/images/deployment/heroku/create-new-app.png                              
npm notice 444.0kB docs/source/images/deployment/heroku/heroku-github-instructions.png                  
npm notice 18.7kB  docs/source/images/deployment/heroku/new-app.png                                     
npm notice 62.2kB  docs/source/images/deployment/heroku/set-app-name.png                                
npm notice 259.5kB docs/source/images/deployment/zeit/now-github-permissions.png                        
npm notice 378.3kB docs/source/images/deployment/zeit/zeit-apollo-server.png                            
npm notice 64.5kB  docs/source/images/features/error-code.png                                           
npm notice 358.2kB docs/source/images/features/error-stacktrace.png                                     
npm notice 360.1kB docs/source/images/features/error-user-input.png                                     
npm notice 53.0kB  docs/source/images/frontend_backend_diagram.svg                                      
npm notice 66.5kB  docs/source/images/graphiql-casual-mocks.png                                         
npm notice 361.6kB docs/source/images/graphql-playground.png                                            
npm notice 6.0kB   docs/source/images/index-get-started.png                                             
npm notice 890B    docs/source/images/index-get-started.svg                                             
npm notice 113.6kB docs/source/images/playground.png                                                    
npm notice 58.6kB  docs/source/images/sandbox-response.jpg                                              
npm notice 93.9kB  docs/source/images/sandbox.jpg                                                       
npm notice 135.4kB docs/source/images/selectrep.png                                                     
npm notice 158.7kB docs/source/images/sitedeployinprogress.png                                          
npm notice 38.8kB  docs/source/images/welcometoreact.png                                                
npm notice 136.6kB docs/source/images/willSendResponse-flowchart.png                                    
npm notice 1.4kB   docs/source/index.mdx                                                                
npm notice 20.7kB  docs/source/integrations/middleware.mdx                                              
npm notice 16.3kB  docs/source/integrations/plugins-event-reference.md                                  
npm notice 9.1kB   docs/source/integrations/plugins.md                                                  
npm notice 56.0kB  docs/source/migration.mdx                                                            
npm notice 4.8kB   docs/source/monitoring/health-checks.md                                              
npm notice 6.2kB   docs/source/monitoring/metrics.md                                                    
npm notice 15.7kB  docs/source/performance/apq.md                                                       
npm notice 22.3kB  docs/source/performance/caching.md                                                   
npm notice 5.5kB   docs/source/proxy-configuration.md                                                   
npm notice 4.1kB   docs/source/requests.md                                                              
npm notice 9.8kB   docs/source/schema/creating-directives.mdx                                           
npm notice 7.4kB   docs/source/schema/custom-scalars.md                                                 
npm notice 3.8kB   docs/source/schema/directives.md                                                     
npm notice 22.1kB  docs/source/schema/schema.md                                                         
npm notice 7.4kB   docs/source/schema/unions-interfaces.md                                              
npm notice 12.0kB  docs/source/security/authentication.md                                               
npm notice 21.4kB  docs/source/security/cors.mdx                                                        
npm notice 2.1kB   docs/source/security/terminating-ssl.mdx                                             
npm notice 5.3kB   docs/source/testing/build-run-queries.mdx                                            
npm notice 7.8kB   docs/source/testing/mocking.md                                                       
npm notice 7.0kB   docs/source/testing/testing.mdx                                                      
npm notice 514B    jest.config.base.js                                                                  
npm notice 978B    jest.setup.js                                                                        
npm notice 200B    lerna.json                                                                           
npm notice 412B    netlify.toml                                                                         
npm notice 6.0kB   package.json                                                                         
npm notice 896B    packages/apollo-datasource-rest/package.json                                         
npm notice 6.3kB   packages/apollo-datasource-rest/README.md                                            
npm notice 5.3kB   packages/apollo-datasource-rest/src/HTTPCache.ts                                     
npm notice 163B    packages/apollo-datasource-rest/src/index.ts                                         
npm notice 8.1kB   packages/apollo-datasource-rest/src/RESTDataSource.ts                                
npm notice 881B    packages/apollo-datasource-rest/src/types/http-cache-semantics/index.d.ts            
npm notice 669B    packages/apollo-datasource/package.json                                              
npm notice 281B    packages/apollo-datasource/src/index.ts                                              
npm notice 59B     packages/apollo-reporting-protobuf/generated/index.d.ts                              
npm notice 433B    packages/apollo-reporting-protobuf/generated/index.js                                
npm notice 105.8kB packages/apollo-reporting-protobuf/generated/protobuf.d.ts                           
npm notice 324.8kB packages/apollo-reporting-protobuf/generated/protobuf.js                             
npm notice 1.2kB   packages/apollo-reporting-protobuf/package.json                                      
npm notice 2.0kB   packages/apollo-reporting-protobuf/README.md                                         
npm notice 265B    packages/apollo-reporting-protobuf/src/.editorconfig                                 
npm notice 59B     packages/apollo-reporting-protobuf/src/index.d.ts                                    
npm notice 433B    packages/apollo-reporting-protobuf/src/index.js                                      
npm notice 17.2kB  packages/apollo-reporting-protobuf/src/reports.proto                                 
npm notice 1.1kB   packages/apollo-server-azure-functions/package.json                                  
npm notice 1.9kB   packages/apollo-server-azure-functions/README.md                                     
npm notice 7.3kB   packages/apollo-server-azure-functions/src/ApolloServer.ts                           
npm notice 1.9kB   packages/apollo-server-azure-functions/src/azureFunctionApollo.ts                    
npm notice 309B    packages/apollo-server-azure-functions/src/index.ts                                  
npm notice 720B    packages/apollo-server-cache-memcached/package.json                                  
npm notice 1.0kB   packages/apollo-server-cache-memcached/README.md                                     
npm notice 1.8kB   packages/apollo-server-cache-memcached/src/index.ts                                  
npm notice 739B    packages/apollo-server-cache-redis/package.json                                      
npm notice 2.8kB   packages/apollo-server-cache-redis/README.md                                         
npm notice 3.2kB   packages/apollo-server-cache-redis/src/BaseRedisCache.ts                             
npm notice 164B    packages/apollo-server-cache-redis/src/index.ts                                      
npm notice 237B    packages/apollo-server-cache-redis/src/RedisCache.ts                                 
npm notice 652B    packages/apollo-server-cache-redis/src/RedisClusterCache.ts                          
npm notice 588B    packages/apollo-server-caching/package.json                                          
npm notice 2.4kB   packages/apollo-server-caching/README.md                                             
npm notice 249B    packages/apollo-server-caching/src/index.ts                                          
npm notice 1.8kB   packages/apollo-server-caching/src/InMemoryLRUCache.ts                               
npm notice 469B    packages/apollo-server-caching/src/KeyValueCache.ts                                  
npm notice 1.2kB   packages/apollo-server-caching/src/PrefixingKeyValueCache.ts                         
npm notice 2.2kB   packages/apollo-server-caching/src/testsuite.ts                                      
npm notice 1.0kB   packages/apollo-server-cloud-functions/package.json                                  
npm notice 7.9kB   packages/apollo-server-cloud-functions/README.md                                     
npm notice 1.4kB   packages/apollo-server-cloud-functions/src/ApolloServer.ts                           
npm notice 309B    packages/apollo-server-cloud-functions/src/index.ts                                  
npm notice 112B    packages/apollo-server-cloudflare/jest.config.js                                     
npm notice 898B    packages/apollo-server-cloudflare/package.json                                       
npm notice 1.2kB   packages/apollo-server-cloudflare/src/ApolloServer.ts                                
npm notice 1.7kB   packages/apollo-server-cloudflare/src/cloudflareApollo.ts                            
npm notice 258B    packages/apollo-server-cloudflare/src/index.ts                                       
npm notice 331B    packages/apollo-server-cloudflare/src/types/cloudflare/index.d.ts                    
npm notice 278B    packages/apollo-server-cloudflare/tsconfig.json                                      
npm notice 182B    packages/apollo-server-cloudflare/tsconfig.test.json                                 
npm notice 1.7kB   packages/apollo-server-core/package.json                                             
npm notice 909B    packages/apollo-server-core/README.md                                                
npm notice 40.6kB  packages/apollo-server-core/src/ApolloServer.ts                                      
npm notice 906B    packages/apollo-server-core/src/cachePolicy.ts                                       
npm notice 2.1kB   packages/apollo-server-core/src/determineApolloConfig.ts                             
npm notice 324B    packages/apollo-server-core/src/gql.ts                                               
npm notice 3.5kB   packages/apollo-server-core/src/graphqlOptions.ts                                    
npm notice 863B    packages/apollo-server-core/src/index.ts                                             
npm notice 1.1kB   packages/apollo-server-core/src/internalPlugin.ts                                    
npm notice 524B    packages/apollo-server-core/src/nodeHttpToRequest.ts                                 
npm notice 13.0kB  packages/apollo-server-core/src/plugin/cacheControl/index.ts                         
npm notice 1.1kB   packages/apollo-server-core/src/plugin/drainHttpServer/index.ts                      
npm notice 4.3kB   packages/apollo-server-core/src/plugin/drainHttpServer/stoppable.ts                  
npm notice 5.5kB   packages/apollo-server-core/src/plugin/index.ts                                      
npm notice 5.5kB   packages/apollo-server-core/src/plugin/inlineTrace/index.ts                          
npm notice 7.9kB   packages/apollo-server-core/src/plugin/landingPage/default/index.ts                  
npm notice 4.6kB   packages/apollo-server-core/src/plugin/landingPage/default/types.ts                  
npm notice 1.8kB   packages/apollo-server-core/src/plugin/landingPage/graphqlPlayground/index.ts        
npm notice 1.4kB   packages/apollo-server-core/src/plugin/schemaIsFederated.ts                          
npm notice 302.0kB packages/apollo-server-core/src/plugin/schemaReporting/generated/operations.d.ts     
npm notice 7.6kB   packages/apollo-server-core/src/plugin/schemaReporting/index.ts                      
npm notice 6.2kB   packages/apollo-server-core/src/plugin/schemaReporting/schemaReporter.ts             
npm notice 12.5kB  packages/apollo-server-core/src/plugin/traceTreeBuilder.ts                           
npm notice 2.7kB   packages/apollo-server-core/src/plugin/usageReporting/defaultSendOperationsAsTrace.ts
npm notice 2.8kB   packages/apollo-server-core/src/plugin/usageReporting/durationHistogram.ts           
npm notice 265B    packages/apollo-server-core/src/plugin/usageReporting/index.ts                       
npm notice 4.4kB   packages/apollo-server-core/src/plugin/usageReporting/iterateOverTrace.ts            
npm notice 2.4kB   packages/apollo-server-core/src/plugin/usageReporting/operationDerivedDataCache.ts   
npm notice 15.7kB  packages/apollo-server-core/src/plugin/usageReporting/options.ts                     
npm notice 34.9kB  packages/apollo-server-core/src/plugin/usageReporting/plugin.ts                      
npm notice 16.3kB  packages/apollo-server-core/src/plugin/usageReporting/stats.ts                       
npm notice 4.0kB   packages/apollo-server-core/src/plugin/usageReporting/traceDetails.ts                
npm notice 22.4kB  packages/apollo-server-core/src/requestPipeline.ts                                   
npm notice 19.3kB  packages/apollo-server-core/src/runHttpQuery.ts                                      
npm notice 4.8kB   packages/apollo-server-core/src/types.ts                                             
npm notice 358B    packages/apollo-server-core/src/utils/createSHA.ts                                   
npm notice 3.3kB   packages/apollo-server-core/src/utils/dispatcher.ts                                  
npm notice 580B    packages/apollo-server-core/src/utils/isNodeLike.ts                                  
npm notice 9.3kB   packages/apollo-server-core/src/utils/pluginTestHarness.ts                           
npm notice 3.0kB   packages/apollo-server-core/src/utils/schemaHash.ts                                  
npm notice 5.8kB   packages/apollo-server-core/src/utils/schemaInstrumentation.ts                       
npm notice 8.7kB   packages/apollo-server-core/src/utils/schemaManager.ts                               
npm notice 3.0kB   packages/apollo-server-env/dist/fetch.d.ts                                           
npm notice 1.4kB   packages/apollo-server-env/dist/index.browser.js                                     
npm notice 1.4kB   packages/apollo-server-env/dist/index.browser.js.map                                 
npm notice 48B     packages/apollo-server-env/dist/index.d.ts                                           
npm notice 894B    packages/apollo-server-env/dist/index.js                                             
npm notice 142B    packages/apollo-server-env/dist/index.js.map                                         
npm notice 851B    packages/apollo-server-env/dist/polyfills/fetch.js                                   
npm notice 217B    packages/apollo-server-env/dist/polyfills/fetch.js.map                               
npm notice 410B    packages/apollo-server-env/dist/polyfills/url.js                                     
npm notice 168B    packages/apollo-server-env/dist/polyfills/url.js.map                                 
npm notice 1.2kB   packages/apollo-server-env/dist/url.d.ts                                             
npm notice 772B    packages/apollo-server-env/package.json                                              
npm notice 263B    packages/apollo-server-env/README.md                                                 
npm notice 3.0kB   packages/apollo-server-env/src/fetch.d.ts                                            
npm notice 1.1kB   packages/apollo-server-env/src/index.browser.js                                      
npm notice 48B     packages/apollo-server-env/src/index.d.ts                                            
npm notice 68B     packages/apollo-server-env/src/index.ts                                              
npm notice 75B     packages/apollo-server-env/src/polyfills/fetch.js                                    
npm notice 44B     packages/apollo-server-env/src/polyfills/url.js                                      
npm notice 1.2kB   packages/apollo-server-env/src/url.d.ts                                              
npm notice 600B    packages/apollo-server-errors/package.json                                           
npm notice 9.6kB   packages/apollo-server-errors/src/index.ts                                           
npm notice 1.3kB   packages/apollo-server-express/package.json                                          
npm notice 2.2kB   packages/apollo-server-express/README.md                                             
npm notice 7.7kB   packages/apollo-server-express/src/ApolloServer.ts                                   
npm notice 463B    packages/apollo-server-express/src/index.ts                                          
npm notice 1.1kB   packages/apollo-server-fastify/package.json                                          
npm notice 1.8kB   packages/apollo-server-fastify/README.md                                             
npm notice 4.9kB   packages/apollo-server-fastify/src/ApolloServer.ts                                   
npm notice 359B    packages/apollo-server-fastify/src/index.ts                                          
npm notice 1.1kB   packages/apollo-server-hapi/package.json                                             
npm notice 2.2kB   packages/apollo-server-hapi/README.md                                                
npm notice 5.7kB   packages/apollo-server-hapi/src/ApolloServer.ts                                      
npm notice 348B    packages/apollo-server-hapi/src/index.ts                                             
npm notice 1.1kB   packages/apollo-server-integration-testsuite/dist/apolloFetch.d.ts                   
npm notice 1.1kB   packages/apollo-server-integration-testsuite/dist/apolloFetch.d.ts.map               
npm notice 3.8kB   packages/apollo-server-integration-testsuite/dist/apolloFetch.js                     
npm notice 3.4kB   packages/apollo-server-integration-testsuite/dist/apolloFetch.js.map                 
npm notice 996B    packages/apollo-server-integration-testsuite/dist/ApolloServer.d.ts                  
npm notice 1.1kB   packages/apollo-server-integration-testsuite/dist/ApolloServer.d.ts.map              
npm notice 118.3kB packages/apollo-server-integration-testsuite/dist/ApolloServer.js                    
npm notice 84.4kB  packages/apollo-server-integration-testsuite/dist/ApolloServer.js.map                
npm notice 941B    packages/apollo-server-integration-testsuite/dist/index.d.ts                         
npm notice 689B    packages/apollo-server-integration-testsuite/dist/index.d.ts.map                     
npm notice 63.6kB  packages/apollo-server-integration-testsuite/dist/index.js                           
npm notice 47.0kB  packages/apollo-server-integration-testsuite/dist/index.js.map                       
npm notice 797B    packages/apollo-server-integration-testsuite/package.json                            
npm notice 5.0kB   packages/apollo-server-integration-testsuite/src/apolloFetch.ts                      
npm notice 110.8kB packages/apollo-server-integration-testsuite/src/ApolloServer.ts                     
npm notice 54.1kB  packages/apollo-server-integration-testsuite/src/index.ts                            
npm notice 1.3kB   packages/apollo-server-koa/package.json                                              
npm notice 1.7kB   packages/apollo-server-koa/README.md                                                 
npm notice 5.9kB   packages/apollo-server-koa/src/ApolloServer.ts                                       
npm notice 307B    packages/apollo-server-koa/src/index.ts                                              
npm notice 1.1kB   packages/apollo-server-lambda/package.json                                           
npm notice 8.2kB   packages/apollo-server-lambda/README.md                                              
npm notice 2.6kB   packages/apollo-server-lambda/src/ApolloServer.ts                                    
npm notice 309B    packages/apollo-server-lambda/src/index.ts                                           
npm notice 1.0kB   packages/apollo-server-micro/package.json                                            
npm notice 4.6kB   packages/apollo-server-micro/README.md                                               
npm notice 4.4kB   packages/apollo-server-micro/src/ApolloServer.ts                                     
npm notice 287B    packages/apollo-server-micro/src/index.ts                                            
npm notice 2.4kB   packages/apollo-server-micro/src/microApollo.ts                                      
npm notice 128B    packages/apollo-server-micro/src/types.ts                                            
npm notice 452B    packages/apollo-server-plugin-base/package.json                                      
npm notice 113B    packages/apollo-server-plugin-base/README.md                                         
npm notice 6.2kB   packages/apollo-server-plugin-base/src/index.ts                                      
npm notice 922B    packages/apollo-server-plugin-response-cache/package.json                            
npm notice 564B    packages/apollo-server-plugin-response-cache/README.md                               
npm notice 12.9kB  packages/apollo-server-plugin-response-cache/src/ApolloServerPluginResponseCache.ts  
npm notice 79B     packages/apollo-server-plugin-response-cache/src/index.ts                            
npm notice 605B    packages/apollo-server-types/package.json                                            
npm notice 135B    packages/apollo-server-types/README.md                                               
npm notice 10.7kB  packages/apollo-server-types/src/index.ts                                            
npm notice 996B    packages/apollo-server/package.json                                                  
npm notice 9.8kB   packages/apollo-server/README.md                                                     
npm notice 287B    packages/apollo-server/src/exports.ts                                                
npm notice 4.2kB   packages/apollo-server/src/index.ts                                                  
npm notice 5.7kB   renovate.json5                                                                       
npm notice 699B    tsconfig.base.json                                                                   
npm notice 1.1kB   tsconfig.build.json                                                                  
npm notice 189B    tsconfig.json                                                                        
npm notice 222B    tsconfig.test.base.json                                                              
npm notice 1.4kB   tsconfig.test.json                                                                   
npm notice 225B    types/mock-req/index.d.ts                                                            
npm notice === Tarball Details === 
npm notice name:          apollo-server-monorepo                  
npm notice version:       1.0.0                                   
npm notice filename:      apollo-server-monorepo-1.0.0.tgz        
npm notice package size:  51.1 MB                                 
npm notice unpacked size: 53.7 MB                                 
npm notice shasum:        a4e3208d8ce7d9f5ad4a927635d060b671d7838c
npm notice integrity:     sha512-yKgBcUeB+nQ0W[...]ojvHKnTijV4pA==
npm notice total files:   282                                     
npm notice 
apollo-server-monorepo-1.0.0.tgz
[Pipeline] sh
+ ls /usr/local/myapp/apollo-server
CHANGELOG.md
CONTRIBUTING.md
DEVELOPMENT.md
LICENSE
README.md
ROADMAP.md
apollo-server-monorepo-1.0.0.tgz
apollo-server-monorepo-1.0.1.tgz
codecov.yml
codegen.yml
cspell-dict.txt
cspell.yaml
docs
jest.config.base.js
jest.setup.js
lerna.json
netlify.toml
node_modules
package-lock.json
package.json
packages
renovate.json5
tsconfig.base.json
tsconfig.build.json
tsconfig.json
tsconfig.test.base.json
tsconfig.test.json
types
[Pipeline] sh
+ mv /usr/local/myapp/apollo-server/apollo-server-monorepo-1.0.0.tgz /usr/local/copy
[Pipeline] dir
Running in /var/jenkins_home/workspace/artifacts
[Pipeline] {
[Pipeline] archiveArtifacts
Archiving artifacts
[Pipeline] }
[Pipeline] // dir
[Pipeline] }
$ docker stop --time=1 ba128caa0b61728cac42557aa8cfad003010ef1370d9b1426312465fa19b318f
$ docker rm -f ba128caa0b61728cac42557aa8cfad003010ef1370d9b1426312465fa19b318f
[Pipeline] // withDockerContainer
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // node
[Pipeline] }
[Pipeline] // stage
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // node
[Pipeline] End of Pipeline
Finished: SUCCESS


pipeline {
	agent any
    parameters {
        string(name: 'BRANCH', defaultValue: 'dev', description: '')
        booleanParam(name: 'RUN_TESTS', defaultValue: true, description: '')
        }
  	stages {
        stage("Clone"){
            steps {
              sh 'docker container prune -f'
              sh 'docker volume prune -f'
              sh 'docker volume  create --name inputVol'
              sh 'docker volume  create --name outputVol'
              sh "docker build -t lz4clone . -f ITE/GCL04/MP401341/Lab05/DockerfileClone --build-arg BRANCH=${BRANCH}"
              sh 'docker run -v inputVol:/lz4 lz4clone'
                }
              }
        stage("Build") {
            steps {
                sh 'docker build -t build . -f ITE/GCL04/MP401341/Lab05/DockerfileBuild'
                sh 'docker run -v inputVol:/lz4 -v outputVol:/build build'
            }
        }
        stage("Test") {
           when {
                  environment name: 'RUN_TESTS', value: "true"
            }
            steps {
                sh 'docker build -t test . -f ITE/GCL04/MP401341/Lab05/DockerfileTest --build-arg image=build'
                sh 'docker run -v inputVol:/lz4 test'
            }
        }
        stage("Deploy") {
            steps {
                sh 'docker build -t deployment . -f ITE/GCL04/MP401341/Lab05/DockerfileDeploy'
                sh 'docker run  -v outputVol:/build  deployment'
            }
        }
        stage("Publish") {
            steps {
                sh 'mkdir bin -p'
                sh 'docker build -t publish . -f ITE/GCL04/MP401341/Lab05/DockerfilePublish'
                sh 'docker run  -v $PWD/bin:/public -v outputVol:/build publish'
            }
        }
  	}
     post {
      always {
       sh 'echo WIP'
      }
      }
      
}


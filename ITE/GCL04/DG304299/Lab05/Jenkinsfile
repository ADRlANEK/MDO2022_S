
  
pipeline 
{
    agent any

     parameters 
     {
    
        string(name: 'VERSION', defaultValue: '1.0.0', description: '')
        booleanParam(name: 'PROMOTE', defaultValue: false, description: '')

    }


    stages
     {

          stage('Clone') 
        {
            steps 
            {
              sh 'docker container prune -f'
              sh 'docker volume prune -f'
              sh 'docker volume  create --name repo_vol'
              sh 'docker volume  create --name build_vol'
              sh "docker build -t clone . -f ./ITE/GCL04/DG304299/Lab05/docker_clone"
              sh "docker run -v repo_vol:/Guess-Word-Game clone"           
            }
        }


        stage('Build') 
        {
            steps 
            {
               sh 'docker build -t build . -f ./ITE/GCL04/DG304299/Lab05/docker_build'
               sh 'docker run --name build_container -v repo_vol:/Guess-Word-Game -v build_vol:/build -v ${PWD}:/public build'
            }
        }

         stage('Test') 
        {
            steps 
            {
               sh 'docker build -t test . -f ./ITE/GCL04/DG304299/Lab05/docker_test'
               sh 'docker run --name test_container -v repo_vol:/Guess-Word-Game test'
            }
        }

          stage('Deploy') 
        {
            steps 
            {

               sh 'docker build -t deploy_1 . -f ./ITE/GCL04/DG304299/Lab05/docker_deploy'
              
                    script
                    {
                            try 
                            {
                                sh 'docker run --name deploy_container -v build_vol:/build deploy_1'
                            } 
                            catch (Exception e) 
                            {
                                echo 'Exception occurred: ' + "Graphic enviroment is needed to run this app"
                            }

                    }

                sh 'docker build -t deploy_final . -f ./ITE/GCL04/DG304299/Lab05/docker_deploy_final'
                sh 'docker run --name deploy_container_final -v build_vol:/build deploy_final'

                sh "rm -rf artifact && mkdir artifact"
                sh "docker cp deploy_container:/artifact/guess.jar "

                sh 'docker ps -a'
            }
        }

        stage("Publish") 
        {
           
            steps
            {
               script {
                    if(params.PROMOTE)
                     {
                         sh 'ls'
                    }
                    else {
                        echo "Success, but not promoting to new version! (check button)"
                    }
                }
            }
        }


    }
}
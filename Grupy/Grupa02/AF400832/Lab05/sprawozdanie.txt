1. Utowrzenie brancha do lab05
	git checkout -b Grupa02-AF400832_Lab05 

2. Jenkins
2.1 stworzenie sieci w jenkinsie
	$ docker network create jenkins
	
2.2 Run a docker:dind Docker image

	docker run --name jenkins-docker --rm --detach ^
  	--privileged --network jenkins --network-alias docker ^
  	--env DOCKER_TLS_CERTDIR=/certs ^
  	--volume jenkins-docker-certs:/certs/client ^
  	--volume jenkins-data:/var/jenkins_home ^
  	--publish 2376:2376 ^
 	 docker:dind

2.3 Dockerfile:

	FROM jenkins/jenkins:2.332.3-jdk11
	USER root
	RUN apt-get update && apt-get install -y lsb-release
	RUN curl -fsSLo /usr/share/keyrings/docker-archive-keyring.asc \
	  https://download.docker.com/linux/debian/gpg
	RUN echo "deb [arch=$(dpkg --print-architecture) \
	  signed-by=/usr/share/keyrings/docker-archive-keyring.asc] \
	  https://download.docker.com/linux/debian \
	  $(lsb_release -cs) stable" > /etc/apt/sources.list.d/docker.list
	RUN apt-get update && apt-get install -y docker-ce-cli
	USER jenkins
	RUN jenkins-plugin-cli --plugins "blueocean:1.25.3 docker-workflow:1.28"

2.4 budowanie obrazu
	docker build -t myjenkins-blueocean:2.332.1-1 .

2.5 uruchomienie obrazu jenkinsa jako kontenera w Dokerze

	docker run --name jenkins-blueocean --restart=on-failure --detach ^
	  --network jenkins --env DOCKER_HOST=tcp://docker:2376 ^
	  --env DOCKER_CERT_PATH=/certs/client --env DOCKER_TLS_VERIFY=1 ^
	  --volume jenkins-data:/var/jenkins_home ^
	  --volume jenkins-docker-certs:/certs/client:ro ^
	  --publish 8080:8080 --publish 50000:50000 myjenkins-blueocean:2.332.3-1

3. dodanie obrazu Jenkinsa na Dockerhuba

	docker tag myjenkins-blueocean:2.332.1-1 drinaaf/400832
	docker push drinaaf/af400832

4.1 Utworzenie projektu w jenkinsie
4.2 Dodanie do repozytorium i odpowiedniego brancha (z lab 04)
4.3 Napisanie joba
4.4 Uruchomienie projektu z niepowodzeniem, pomimo zainstalowanych wtyczek do docker i compose

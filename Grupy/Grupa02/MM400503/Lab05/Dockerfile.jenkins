# FROM jenkins/jenkins:2.332.1-jdk11
# USER root
# RUN apt-get update && apt-get install -y lsb-release
# RUN curl -fsSLo /usr/share/keyrings/docker-archive-keyring.asc \
#   https://download.docker.com/linux/debian/gpg
# RUN echo "deb [arch=$(dpkg --print-architecture) \
#   signed-by=/usr/share/keyrings/docker-archive-keyring.asc] \
#   https://download.docker.com/linux/debian \
#   $(lsb_release -cs) stable" > /etc/apt/sources.list.d/docker.list
# RUN apt-get update && apt-get install -y docker-ce docker-ce-cli containerd.io
# RUN apt-get install -y --reinstall systemd

# # RUN curl https://get.docker.com/ > dockerinstall && chmod 777 dockerinstall && ./dockerinstall
# # RUN chmod 666 /var/run/docker.sock


# RUN DOCKER_CONFIG=${DOCKER_CONFIG:-$HOME/.docker}
# RUN mkdir -p $DOCKER_CONFIG/cli-plugins
# RUN curl -SL https://github.com/docker/compose/releases/download/v2.2.3/docker-compose-linux-x86_64 -o $DOCKER_CONFIG/cli-plugins/docker-compose
# RUN chmod +x $DOCKER_CONFIG/cli-plugins/docker-compose

# RUN echo $(docker-compose --version) 
# ENV PATH="$PATH:/cli-plugins"

# # RUN systemctl daemon-reload
# # RUN systemctl restart docker

# USER jenkins
# # RUN gpasswd -a jenkins docker


FROM jenkins/jenkins:lts
USER root
RUN apt-get update && apt-get install -y \
    apt-transport-https \
    ca-certificates \
    curl \
    gnupg-agent \
    software-properties-common
RUN curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add
RUN add-apt-repository \
   "deb [arch=amd64] https://download.docker.com/linux/debian \
   $(lsb_release -cs) \
   stable"
RUN apt-get update && apt-get install -y docker-ce docker-ce-cli containerd.io
RUN curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
RUN chmod +x /usr/local/bin/docker-compose


EXPOSE 8080